<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20233.23.1017.0948                               -->
<workbook original-version='18.1' source-build='2023.3.0 (20233.23.1017.0948)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='18.1'>
      <aliases enabled='yes' />
      <column caption='Measure of Interest' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Lstat&quot;'>
        <calculation class='tableau' formula='&quot;Lstat&quot;' />
        <members>
          <member value='&quot;AGE&quot;' />
          <member value='&quot;Crim&quot;' />
          <member value='&quot;Lstat&quot;' />
          <member value='&quot;NOX&quot;' />
          <member value='&quot;RM&quot;' />
        </members>
      </column>
    </datasource>
    <datasource caption='housing' inline='true' name='federated.1smi3wr04twz9s1brfl1n128e1xt' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='housing' name='textscan.0oc79t00m4ro0a1g5gbah0w0cqpw'>
            <connection class='textscan' directory='C:/Users/gudla/OneDrive - Lehigh University/1-MBA/Tableau' filename='housing.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.0oc79t00m4ro0a1g5gbah0w0cqpw' name='boston.csv' table='[boston#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='real' name='CRIM' ordinal='0' />
            <column datatype='real' name='ZN' ordinal='1' />
            <column datatype='real' name='INDUS' ordinal='2' />
            <column datatype='integer' name='CHAS' ordinal='3' />
            <column datatype='real' name='NOX' ordinal='4' />
            <column datatype='real' name='RM' ordinal='5' />
            <column datatype='real' name='AGE' ordinal='6' />
            <column datatype='real' name='DIS' ordinal='7' />
            <column datatype='integer' name='RAD' ordinal='8' />
            <column datatype='integer' name='TAX' ordinal='9' />
            <column datatype='real' name='PTRATIO' ordinal='10' />
            <column datatype='real' name='B' ordinal='11' />
            <column datatype='real' name='LSTAT' ordinal='12' />
            <column datatype='real' name='MEDV' ordinal='13' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='textscan.0oc79t00m4ro0a1g5gbah0w0cqpw' name='boston.csv' table='[boston#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='real' name='CRIM' ordinal='0' />
            <column datatype='real' name='ZN' ordinal='1' />
            <column datatype='real' name='INDUS' ordinal='2' />
            <column datatype='integer' name='CHAS' ordinal='3' />
            <column datatype='real' name='NOX' ordinal='4' />
            <column datatype='real' name='RM' ordinal='5' />
            <column datatype='real' name='AGE' ordinal='6' />
            <column datatype='real' name='DIS' ordinal='7' />
            <column datatype='integer' name='RAD' ordinal='8' />
            <column datatype='integer' name='TAX' ordinal='9' />
            <column datatype='real' name='PTRATIO' ordinal='10' />
            <column datatype='real' name='B' ordinal='11' />
            <column datatype='real' name='LSTAT' ordinal='12' />
            <column datatype='real' name='MEDV' ordinal='13' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[boston.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CRIM</remote-name>
            <remote-type>5</remote-type>
            <local-name>[CRIM]</local-name>
            <parent-name>[boston.csv]</parent-name>
            <remote-alias>CRIM</remote-alias>
            <ordinal>0</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[boston.csv_D4AC58F56E3D4B9EA0A57218E786030A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ZN</remote-name>
            <remote-type>5</remote-type>
            <local-name>[ZN]</local-name>
            <parent-name>[boston.csv]</parent-name>
            <remote-alias>ZN</remote-alias>
            <ordinal>1</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[boston.csv_D4AC58F56E3D4B9EA0A57218E786030A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>INDUS</remote-name>
            <remote-type>5</remote-type>
            <local-name>[INDUS]</local-name>
            <parent-name>[boston.csv]</parent-name>
            <remote-alias>INDUS</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[boston.csv_D4AC58F56E3D4B9EA0A57218E786030A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CHAS</remote-name>
            <remote-type>20</remote-type>
            <local-name>[CHAS]</local-name>
            <parent-name>[boston.csv]</parent-name>
            <remote-alias>CHAS</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[boston.csv_D4AC58F56E3D4B9EA0A57218E786030A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>NOX</remote-name>
            <remote-type>5</remote-type>
            <local-name>[NOX]</local-name>
            <parent-name>[boston.csv]</parent-name>
            <remote-alias>NOX</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[boston.csv_D4AC58F56E3D4B9EA0A57218E786030A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>RM</remote-name>
            <remote-type>5</remote-type>
            <local-name>[RM]</local-name>
            <parent-name>[boston.csv]</parent-name>
            <remote-alias>RM</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[boston.csv_D4AC58F56E3D4B9EA0A57218E786030A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>AGE</remote-name>
            <remote-type>5</remote-type>
            <local-name>[AGE]</local-name>
            <parent-name>[boston.csv]</parent-name>
            <remote-alias>AGE</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[boston.csv_D4AC58F56E3D4B9EA0A57218E786030A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>DIS</remote-name>
            <remote-type>5</remote-type>
            <local-name>[DIS]</local-name>
            <parent-name>[boston.csv]</parent-name>
            <remote-alias>DIS</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[boston.csv_D4AC58F56E3D4B9EA0A57218E786030A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>RAD</remote-name>
            <remote-type>20</remote-type>
            <local-name>[RAD]</local-name>
            <parent-name>[boston.csv]</parent-name>
            <remote-alias>RAD</remote-alias>
            <ordinal>8</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[boston.csv_D4AC58F56E3D4B9EA0A57218E786030A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TAX</remote-name>
            <remote-type>20</remote-type>
            <local-name>[TAX]</local-name>
            <parent-name>[boston.csv]</parent-name>
            <remote-alias>TAX</remote-alias>
            <ordinal>9</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[boston.csv_D4AC58F56E3D4B9EA0A57218E786030A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PTRATIO</remote-name>
            <remote-type>5</remote-type>
            <local-name>[PTRATIO]</local-name>
            <parent-name>[boston.csv]</parent-name>
            <remote-alias>PTRATIO</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[boston.csv_D4AC58F56E3D4B9EA0A57218E786030A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>B</remote-name>
            <remote-type>5</remote-type>
            <local-name>[B]</local-name>
            <parent-name>[boston.csv]</parent-name>
            <remote-alias>B</remote-alias>
            <ordinal>11</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[boston.csv_D4AC58F56E3D4B9EA0A57218E786030A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>LSTAT</remote-name>
            <remote-type>5</remote-type>
            <local-name>[LSTAT]</local-name>
            <parent-name>[boston.csv]</parent-name>
            <remote-alias>LSTAT</remote-alias>
            <ordinal>12</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[boston.csv_D4AC58F56E3D4B9EA0A57218E786030A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>MEDV</remote-name>
            <remote-type>5</remote-type>
            <local-name>[MEDV]</local-name>
            <parent-name>[boston.csv]</parent-name>
            <remote-alias>MEDV</remote-alias>
            <ordinal>13</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[boston.csv_D4AC58F56E3D4B9EA0A57218E786030A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Chas' datatype='integer' name='[CHAS]' role='measure' type='quantitative' />
      <column caption='Crim' datatype='real' name='[CRIM]' role='measure' type='quantitative' />
      <column caption='Dynamic Measure' datatype='real' name='[Calculation_1783425521034436608]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='case [Parameters].[Parameter 1]&#13;&#10;when &apos;AGE&apos; then [AGE]&#13;&#10;when &apos;NOX&apos; then [NOX]&#13;&#10;When &apos;Crim&apos; then [CRIM]&#13;&#10;When &apos;RM&apos; then [RM]&#13;&#10;When &apos;Lstat&apos; then [LSTAT]&#13;&#10;End' />
      </column>
      <column caption='CRIM Rate' datatype='string' name='[Calculation_1783425521039630337]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='If [CRIM]&lt;=3 then &apos;Low&apos;&#13;&#10;ELSEIF [CRIM] &lt;=8 then &apos;Moderate&apos;&#13;&#10;Else &apos;High&apos;&#13;&#10;END' />
      </column>
      <column caption='Crim (bin)' datatype='integer' name='[Crim (bin)]' role='dimension' type='ordinal'>
        <calculation class='bin' decimals='0' formula='[CRIM]' peg='0' size='3' />
      </column>
      <column caption='Indus' datatype='real' name='[INDUS]' role='measure' type='quantitative' />
      <column caption='Lstat' datatype='real' name='[LSTAT]' role='measure' type='quantitative' />
      <column caption='PRICE' datatype='real' name='[MEDV]' role='measure' type='quantitative' />
      <column caption='Ptratio' datatype='real' name='[PTRATIO]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='boston.csv' datatype='table' name='[__tableau_internal_object_id__].[boston.csv_D4AC58F56E3D4B9EA0A57218E786030A]' role='measure' type='quantitative' />
      <column-instance column='[Calculation_1783425521039630337]' derivation='None' name='[none:Calculation_1783425521039630337:nk]' pivot='key' type='nominal' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Calculation_1783425521039630337:nk]' type='palette'>
            <map to='#59a14f'>
              <bucket>&quot;Low&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;High&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;Moderate&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <datasource-dependencies datasource='Parameters'>
        <column caption='Measure of Interest' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Lstat&quot;'>
          <calculation class='tableau' formula='&quot;Lstat&quot;' />
        </column>
      </datasource-dependencies>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='boston.csv' id='boston.csv_D4AC58F56E3D4B9EA0A57218E786030A'>
            <properties context=''>
              <relation connection='textscan.0oc79t00m4ro0a1g5gbah0w0cqpw' name='boston.csv' table='[boston#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='real' name='CRIM' ordinal='0' />
                  <column datatype='real' name='ZN' ordinal='1' />
                  <column datatype='real' name='INDUS' ordinal='2' />
                  <column datatype='integer' name='CHAS' ordinal='3' />
                  <column datatype='real' name='NOX' ordinal='4' />
                  <column datatype='real' name='RM' ordinal='5' />
                  <column datatype='real' name='AGE' ordinal='6' />
                  <column datatype='real' name='DIS' ordinal='7' />
                  <column datatype='integer' name='RAD' ordinal='8' />
                  <column datatype='integer' name='TAX' ordinal='9' />
                  <column datatype='real' name='PTRATIO' ordinal='10' />
                  <column datatype='real' name='B' ordinal='11' />
                  <column datatype='real' name='LSTAT' ordinal='12' />
                  <column datatype='real' name='MEDV' ordinal='13' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <worksheets>
    <worksheet name='Crim Rate by Hou Price'>
      <table>
        <view>
          <datasources>
            <datasource caption='housing' name='federated.1smi3wr04twz9s1brfl1n128e1xt' />
          </datasources>
          <datasource-dependencies datasource='federated.1smi3wr04twz9s1brfl1n128e1xt'>
            <column caption='Crim' datatype='real' name='[CRIM]' role='measure' type='quantitative' />
            <column caption='CRIM Rate' datatype='string' name='[Calculation_1783425521039630337]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='If [CRIM]&lt;=3 then &apos;Low&apos;&#13;&#10;ELSEIF [CRIM] &lt;=8 then &apos;Moderate&apos;&#13;&#10;Else &apos;High&apos;&#13;&#10;END' />
            </column>
            <column caption='PRICE' datatype='real' name='[MEDV]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_1783425521039630337]' derivation='None' name='[none:Calculation_1783425521039630337:nk]' pivot='key' type='nominal' />
            <column-instance column='[MEDV]' derivation='None' name='[none:MEDV:qk]' pivot='key' type='quantitative' />
            <column-instance column='[MEDV]' derivation='Sum' name='[sum:MEDV:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.1smi3wr04twz9s1brfl1n128e1xt].[none:MEDV:qk]' included-values='all' />
          <slices>
            <column>[federated.1smi3wr04twz9s1brfl1n128e1xt].[none:MEDV:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <encodings>
              <color column='[federated.1smi3wr04twz9s1brfl1n128e1xt].[none:Calculation_1783425521039630337:nk]' />
              <wedge-size column='[federated.1smi3wr04twz9s1brfl1n128e1xt].[sum:MEDV:qk]' />
              <size column='[federated.1smi3wr04twz9s1brfl1n128e1xt].[sum:MEDV:qk]' />
            </encodings>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{BF0363BB-1C1F-4ACD-A6AB-3A29FCEE90A6}' />
    </worksheet>
    <worksheet name='Crime vs Price'>
      <table>
        <view>
          <datasources>
            <datasource caption='housing' name='federated.1smi3wr04twz9s1brfl1n128e1xt' />
          </datasources>
          <datasource-dependencies datasource='federated.1smi3wr04twz9s1brfl1n128e1xt'>
            <column caption='Crim' datatype='real' name='[CRIM]' role='measure' type='quantitative' />
            <column caption='Crim (bin)' datatype='integer' name='[Crim (bin)]' role='dimension' type='ordinal'>
              <calculation class='bin' decimals='0' formula='[CRIM]' peg='0' size='3' />
            </column>
            <column caption='PRICE' datatype='real' name='[MEDV]' role='measure' type='quantitative' />
            <column-instance column='[Crim (bin)]' derivation='None' name='[none:Crim (bin):ok]' pivot='key' type='ordinal' />
            <column-instance column='[MEDV]' derivation='None' name='[none:MEDV:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1smi3wr04twz9s1brfl1n128e1xt].[none:Crim (bin):ok]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Crim (bin):ok]' />
              <groupfilter function='member' level='[none:Crim (bin):ok]' member='%null%' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1smi3wr04twz9s1brfl1n128e1xt].[none:Crim (bin):ok]</column>
          </slices>
          <aggregation value='false' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <reference-line axis-column='[federated.1smi3wr04twz9s1brfl1n128e1xt].[none:MEDV:qk]' boxplot-mark-exclusion='false' boxplot-whisker-type='standard' enable-instant-analytics='true' formula='average' id='refline0' label-type='automatic' probability='95' scope='per-cell' symmetric='false' value-column='[federated.1smi3wr04twz9s1brfl1n128e1xt].[none:MEDV:qk]' z-order='1' />
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.25' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1smi3wr04twz9s1brfl1n128e1xt].[none:MEDV:qk]</rows>
        <cols>[federated.1smi3wr04twz9s1brfl1n128e1xt].[none:Crim (bin):ok]</cols>
      </table>
      <simple-id uuid='{01DA8323-768D-463F-9B0F-A7F64E1D77BC}' />
    </worksheet>
    <worksheet name='KPI View'>
      <table>
        <view>
          <datasources>
            <datasource caption='housing' name='federated.1smi3wr04twz9s1brfl1n128e1xt' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Measure of Interest' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Lstat&quot;'>
              <calculation class='tableau' formula='&quot;Lstat&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1smi3wr04twz9s1brfl1n128e1xt'>
            <column datatype='real' name='[AGE]' role='measure' type='quantitative' />
            <column datatype='real' name='[B]' role='measure' type='quantitative' />
            <column caption='Chas' datatype='integer' name='[CHAS]' role='measure' type='quantitative' />
            <column caption='Crim' datatype='real' name='[CRIM]' role='measure' type='quantitative' />
            <column caption='Dynamic Measure' datatype='real' name='[Calculation_1783425521034436608]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='case [Parameters].[Parameter 1]&#13;&#10;when &apos;AGE&apos; then [AGE]&#13;&#10;when &apos;NOX&apos; then [NOX]&#13;&#10;When &apos;Crim&apos; then [CRIM]&#13;&#10;When &apos;RM&apos; then [RM]&#13;&#10;When &apos;Lstat&apos; then [LSTAT]&#13;&#10;End' />
            </column>
            <column datatype='real' name='[DIS]' role='measure' type='quantitative' />
            <column caption='Indus' datatype='real' name='[INDUS]' role='measure' type='quantitative' />
            <column caption='Lstat' datatype='real' name='[LSTAT]' role='measure' type='quantitative' />
            <column caption='PRICE' datatype='real' name='[MEDV]' role='measure' type='quantitative' />
            <column datatype='real' name='[NOX]' role='measure' type='quantitative' />
            <column caption='Ptratio' datatype='real' name='[PTRATIO]' role='measure' type='quantitative' />
            <column datatype='integer' name='[RAD]' role='measure' type='quantitative' />
            <column datatype='real' name='[RM]' role='measure' type='quantitative' />
            <column datatype='integer' name='[TAX]' role='measure' type='quantitative' />
            <column datatype='real' name='[ZN]' role='measure' type='quantitative' />
            <column-instance column='[AGE]' derivation='Avg' name='[avg:AGE:qk]' pivot='key' type='quantitative' />
            <column-instance column='[B]' derivation='Avg' name='[avg:B:qk]' pivot='key' type='quantitative' />
            <column-instance column='[CHAS]' derivation='Avg' name='[avg:CHAS:qk]' pivot='key' type='quantitative' />
            <column-instance column='[CRIM]' derivation='Avg' name='[avg:CRIM:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1783425521034436608]' derivation='Avg' name='[avg:Calculation_1783425521034436608:qk]' pivot='key' type='quantitative' />
            <column-instance column='[DIS]' derivation='Avg' name='[avg:DIS:qk]' pivot='key' type='quantitative' />
            <column-instance column='[INDUS]' derivation='Avg' name='[avg:INDUS:qk]' pivot='key' type='quantitative' />
            <column-instance column='[LSTAT]' derivation='Avg' name='[avg:LSTAT:qk]' pivot='key' type='quantitative' />
            <column-instance column='[MEDV]' derivation='Avg' name='[avg:MEDV:qk]' pivot='key' type='quantitative' />
            <column-instance column='[NOX]' derivation='Avg' name='[avg:NOX:qk]' pivot='key' type='quantitative' />
            <column-instance column='[PTRATIO]' derivation='Avg' name='[avg:PTRATIO:qk]' pivot='key' type='quantitative' />
            <column-instance column='[RAD]' derivation='Avg' name='[avg:RAD:qk]' pivot='key' type='quantitative' />
            <column-instance column='[RM]' derivation='Avg' name='[avg:RM:qk]' pivot='key' type='quantitative' />
            <column-instance column='[TAX]' derivation='Avg' name='[avg:TAX:qk]' pivot='key' type='quantitative' />
            <column-instance column='[ZN]' derivation='Avg' name='[avg:ZN:qk]' pivot='key' type='quantitative' />
            <column-instance column='[MEDV]' derivation='None' name='[none:MEDV:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1smi3wr04twz9s1brfl1n128e1xt].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1smi3wr04twz9s1brfl1n128e1xt].[avg:AGE:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1smi3wr04twz9s1brfl1n128e1xt].[avg:B:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1smi3wr04twz9s1brfl1n128e1xt].[avg:CHAS:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1smi3wr04twz9s1brfl1n128e1xt].[avg:CRIM:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1smi3wr04twz9s1brfl1n128e1xt].[avg:DIS:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1smi3wr04twz9s1brfl1n128e1xt].[avg:INDUS:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1smi3wr04twz9s1brfl1n128e1xt].[avg:LSTAT:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1smi3wr04twz9s1brfl1n128e1xt].[avg:NOX:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1smi3wr04twz9s1brfl1n128e1xt].[avg:PTRATIO:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1smi3wr04twz9s1brfl1n128e1xt].[avg:RAD:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1smi3wr04twz9s1brfl1n128e1xt].[avg:RM:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1smi3wr04twz9s1brfl1n128e1xt].[avg:TAX:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1smi3wr04twz9s1brfl1n128e1xt].[avg:ZN:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.1smi3wr04twz9s1brfl1n128e1xt].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.1smi3wr04twz9s1brfl1n128e1xt].[avg:AGE:qk]&quot;</bucket>
              <bucket>&quot;[federated.1smi3wr04twz9s1brfl1n128e1xt].[avg:B:qk]&quot;</bucket>
              <bucket>&quot;[federated.1smi3wr04twz9s1brfl1n128e1xt].[avg:CHAS:qk]&quot;</bucket>
              <bucket>&quot;[federated.1smi3wr04twz9s1brfl1n128e1xt].[avg:CRIM:qk]&quot;</bucket>
              <bucket>&quot;[federated.1smi3wr04twz9s1brfl1n128e1xt].[avg:DIS:qk]&quot;</bucket>
              <bucket>&quot;[federated.1smi3wr04twz9s1brfl1n128e1xt].[avg:Calculation_1783425521034436608:qk]&quot;</bucket>
              <bucket>&quot;[federated.1smi3wr04twz9s1brfl1n128e1xt].[avg:INDUS:qk]&quot;</bucket>
              <bucket>&quot;[federated.1smi3wr04twz9s1brfl1n128e1xt].[avg:LSTAT:qk]&quot;</bucket>
              <bucket>&quot;[federated.1smi3wr04twz9s1brfl1n128e1xt].[avg:NOX:qk]&quot;</bucket>
              <bucket>&quot;[federated.1smi3wr04twz9s1brfl1n128e1xt].[avg:MEDV:qk]&quot;</bucket>
              <bucket>&quot;[federated.1smi3wr04twz9s1brfl1n128e1xt].[avg:PTRATIO:qk]&quot;</bucket>
              <bucket>&quot;[federated.1smi3wr04twz9s1brfl1n128e1xt].[avg:RAD:qk]&quot;</bucket>
              <bucket>&quot;[federated.1smi3wr04twz9s1brfl1n128e1xt].[avg:RM:qk]&quot;</bucket>
              <bucket>&quot;[federated.1smi3wr04twz9s1brfl1n128e1xt].[avg:TAX:qk]&quot;</bucket>
              <bucket>&quot;[federated.1smi3wr04twz9s1brfl1n128e1xt].[avg:ZN:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='quantitative' column='[federated.1smi3wr04twz9s1brfl1n128e1xt].[none:MEDV:qk]' included-values='all' />
          <slices>
            <column>[federated.1smi3wr04twz9s1brfl1n128e1xt].[:Measure Names]</column>
            <column>[federated.1smi3wr04twz9s1brfl1n128e1xt].[none:MEDV:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.1smi3wr04twz9s1brfl1n128e1xt].[:Measure Names]' value='99' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1smi3wr04twz9s1brfl1n128e1xt].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols>[federated.1smi3wr04twz9s1brfl1n128e1xt].[:Measure Names]</cols>
      </table>
      <simple-id uuid='{08161132-F794-4A77-9FF3-F48DC3BDFCE5}' />
    </worksheet>
    <worksheet name='Predictors Analysis'>
      <table>
        <view>
          <datasources>
            <datasource caption='housing' name='federated.1smi3wr04twz9s1brfl1n128e1xt' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Measure of Interest' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Lstat&quot;'>
              <calculation class='tableau' formula='&quot;Lstat&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1smi3wr04twz9s1brfl1n128e1xt'>
            <column datatype='real' name='[AGE]' role='measure' type='quantitative' />
            <column caption='Crim' datatype='real' name='[CRIM]' role='measure' type='quantitative' />
            <column caption='Dynamic Measure' datatype='real' name='[Calculation_1783425521034436608]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='case [Parameters].[Parameter 1]&#13;&#10;when &apos;AGE&apos; then [AGE]&#13;&#10;when &apos;NOX&apos; then [NOX]&#13;&#10;When &apos;Crim&apos; then [CRIM]&#13;&#10;When &apos;RM&apos; then [RM]&#13;&#10;When &apos;Lstat&apos; then [LSTAT]&#13;&#10;End' />
            </column>
            <column caption='Lstat' datatype='real' name='[LSTAT]' role='measure' type='quantitative' />
            <column caption='PRICE' datatype='real' name='[MEDV]' role='measure' type='quantitative' />
            <column datatype='real' name='[NOX]' role='measure' type='quantitative' />
            <column datatype='real' name='[RM]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_1783425521034436608]' derivation='Sum' name='[sum:Calculation_1783425521034436608:qk]' pivot='key' type='quantitative' />
            <column-instance column='[MEDV]' derivation='Sum' name='[sum:MEDV:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='false' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.1smi3wr04twz9s1brfl1n128e1xt].[sum:MEDV:qk]</rows>
        <cols>[federated.1smi3wr04twz9s1brfl1n128e1xt].[sum:Calculation_1783425521034436608:qk]</cols>
        <show-full-range>
          <column>[federated.1smi3wr04twz9s1brfl1n128e1xt].[Crim (bin)]</column>
        </show-full-range>
      </table>
      <simple-id uuid='{A526202D-2BD8-45A4-BDD7-103F2CBBFF81}' />
    </worksheet>
    <worksheet name='Scatter Plot'>
      <table>
        <view>
          <datasources>
            <datasource caption='housing' name='federated.1smi3wr04twz9s1brfl1n128e1xt' />
          </datasources>
          <datasource-dependencies datasource='federated.1smi3wr04twz9s1brfl1n128e1xt'>
            <column caption='Crim' datatype='real' name='[CRIM]' role='measure' type='quantitative' />
            <column caption='PRICE' datatype='real' name='[MEDV]' role='measure' type='quantitative' />
            <column-instance column='[CRIM]' derivation='None' name='[none:CRIM:qk]' pivot='key' type='quantitative' />
            <column-instance column='[CRIM]' derivation='Sum' name='[sum:CRIM:qk]' pivot='key' type='quantitative' />
            <column-instance column='[MEDV]' derivation='Sum' name='[sum:MEDV:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.1smi3wr04twz9s1brfl1n128e1xt].[none:CRIM:qk]' included-values='non-null' />
          <slices>
            <column>[federated.1smi3wr04twz9s1brfl1n128e1xt].[none:CRIM:qk]</column>
          </slices>
          <aggregation value='false' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='log' />
          </pane>
        </panes>
        <rows>[federated.1smi3wr04twz9s1brfl1n128e1xt].[sum:CRIM:qk]</rows>
        <cols>[federated.1smi3wr04twz9s1brfl1n128e1xt].[sum:MEDV:qk]</cols>
      </table>
      <simple-id uuid='{442DDCDC-01A9-4BD5-9109-8C3D3131EB0D}' />
    </worksheet>
  </worksheets>
  <windows saved-dpi-scale-factor='1.25' source-height='37'>
    <window class='worksheet' name='Predictors Analysis'>
      <cards>
        <edge name='left'>
          <strip size='100'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='compact' param='[Parameters].[Parameter 1]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{998AC5F3-54B0-48BB-AF02-4BEF9BA02379}' />
    </window>
    <window class='worksheet' name='Crime vs Price'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1smi3wr04twz9s1brfl1n128e1xt].[none:Crim (bin):ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{174F410F-20BF-432C-9B45-AAE1E744B07C}' />
    </window>
    <window class='worksheet' name='KPI View'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1smi3wr04twz9s1brfl1n128e1xt].[none:MEDV:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1smi3wr04twz9s1brfl1n128e1xt].[:Measure Names]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{D7D73715-C027-49A3-B66E-363D533ACF08}' />
    </window>
    <window class='worksheet' name='Crim Rate by Hou Price'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1smi3wr04twz9s1brfl1n128e1xt].[none:MEDV:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card pane-specification-id='0' param='[federated.1smi3wr04twz9s1brfl1n128e1xt].[none:Calculation_1783425521039630337:nk]' type='color' />
            <card pane-specification-id='0' param='[federated.1smi3wr04twz9s1brfl1n128e1xt].[sum:MEDV:qk]' type='size' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1smi3wr04twz9s1brfl1n128e1xt].[none:Calculation_1783425521039630337:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{B0884FFC-1CE8-4F16-9135-9F070974DFD3}' />
    </window>
    <window class='worksheet' maximized='true' name='Scatter Plot'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{05282B9B-9CF8-47CA-8974-89363D217929}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='164' name='Crim Rate by Hou Price' width='164'>
      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
      CgfJSPkfZLetoLSWLkgAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Crime vs Price' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAATFklEQVR4nO3da3BU533H8e/Z+03a1WXFSiskAeIq7hgDNjGOCcGQpG4yzbiTptNJepl0
      ptPmRTvTF23H7ou+7EzrSXN343YSTx072AXspNgmJjZgDNggQAYJkNAVrVbX3dWu9pw9fQHY
      cdBl45w9e8z5f2aYAWn37LPM/vac81z+j6Lruo4QNqQoiuIodyOEKCcJgLA1CYCwNQmAsDUJ
      wD0i0dfNaDpX5KMLXO3sQpX+DwlA2akZXn/pWb7/gx/yw+eP8OudcqmbV3nqqaeZWuAQ08lr
      vHDoGIVkJ//6ny8xU7j9i5k0zzz1L3Qm737OZOcxDrx1zbC38UnlKncD7K773SO8O1rFX33t
      cbRcDm28j3cHVYLZmwSjjbStWYkyleBURzeZiQSeRcupSPcyOBPm4Ye24FHg/Fu/JL55FzXu
      SfpvXOPozw9R2bSOHavrWbV2ExXeGS69145W0Oi5meKBXTvZuOf3OfDE9/jCzr/HV+7/hDKS
      M0CZ9Vy6TMv6NrxOB4GAn9zABb7zw2c4fqmfwvQ4x4+fZjLZzXOHjrFk3Vpe+P63CTWtov/k
      T7k0DJCh43qSVS2NKMB0VqVt832cevbfODeS5fzbb5BIZznywnMMFaoJTr7HKyduoLirWR6c
      4Opkmf8DykwCUGYev5uZaZUPL3x0QvF1fP2PvkRDlf+Dn1ZE6lgUa6KipoLm+jpqwgFUDUBF
      VRU8Hg8AwUgt0WiMLW2L6B/MfPB8lz9EU2MjVWE/udwMAD5vnlTalLdpWRKAMmvb8TDvHz3I
      jeEkFzuuAAqBYACHohR5hACRCgfJiQkACuoMk2ODnLg0yoqminmeV2BozE289nd9B59sziee
      eOKJcjfCzrzheja2VnPq5NvM+GpZ2tRARXUdi+vCKA4noXAVjY2NRCI1xGO1VASCxONxvIEg
      0VicoMdBSJngzffH2bBmKZU+hY5Ll9m6/w9ZHavAH6ygPt5EdbiShsYGQsEg1dF6Qtn3efWa
      l997sK3c/wVl8+STTz6pyFygTz5dzfDyCy+ycvdjtNYGi3iGyqEf/4jVe7/Kslr73gIriqKU
      NQCFwq3+OodDrsSE+RRFUcraDSonH1Fu8tUrbE0CIGxNAiBsTQIgbE0CIGxNAiBsTQIgbE0C
      IGxNAiBsTQIgbM3wqRCTI528dvQivpCXuiXr2LK8hnfefJNEOkf9iq1sal1k9EsK8bEZfgbI
      jCRZvuMz7Nu3jy2rGkle70CtW8Oje/eQuHKOhZZtHzvfQ39i/mVK2RmVgZH5V8rquk5HT4JM
      Nj9/e7N5hpKpBVol7lWGnwF0h4vr545x/YzK4nXbCE3libdEcDi9NPhcTAA1mkahUEDXdXRd
      R9O0D57/1POn+OqetUTDc0/T7exN8lZ7H1/fv2HOxxQKOk8fPstXPrOWtpbonI/r6B7m3NWb
      fHXPuo/1fsUnW4mmQ+sUZkZ57dVLxGMuvM3rWFYT4uyRIzTt2UPN7ZecbTp0JpfH43Lics59
      ciroOoWCPu9jAHJ5DbfLMe/qqmKPJe49DofD6OnQGtc7OvDHWnCnhsh7/TQ1VnKsvZPY5ga6
      sy42AcpvfCB//d9Bn2fBV3EqCsV8Xn2ehd9esccS9ybDzwAzmTHeO3uOnCvCpk1rCXld3Lx+
      kYs942zcto1q/4cfyjuXPk6n08gmCFGUsq8IkwCIcpLy6ML2JADC1iQAwtYsF4DB5BQzeW3h
      BwphAMsF4GfHOhYcCRbCKJYLgNPhQHEUWxZQiN+N5QLwqfXNRMOBcjdD2ISMAwjbknEAYXsS
      AGFrEgBhaxIAYWsSAGFrEgBha5YLwI3hCXJ5tdzNEDZhuQAcfOsyA4mFtoYWwhiWGwjTtAIO
      h3LXskkhjFb2LZJm45QFusJElvu0TedUCgXZO0yYw3IBePrls/QMjZe7GcImLHcPMDSaorrC
      j8ctE+REaUlVCGFrlpwN+tKb7zM0KrU6hTlK0guUz4zy8qEjrHnoUZbXqhw88AbOkB9nZT17
      H9w473NrKgN45fJHmMT4AOgqV9ovUhGtQc1rqGMjVKzYyq4NiymmZ3/n+ibDmyTEXAwPwMTg
      VSa9DbQEEuSAvCNAduA8r/SehcgS9u1cT2Ge6tBCmMnQABTULL96/Vfkqxq4PtxLPpKi8dFd
      7H10MaBz8tAhEqwn6nDgcDhmrQ797ZdOs+/+VlrqI0Y2TYhZlawX6Hr7SbKRFdQ5kozMhGiI
      ODjy2jvs+4PP47/9mNl6ga4NjNFQW1FUZWchfhcl7QadGr2J6okQ8St0XWpnaGKGles3U1fp
      /eAx0g0qyknGAYStWXIcYGxqGlUrlLsZwiYsF4CfvNpO782JcjdD2ITlAhD0eXDLQJgwieUC
      EPC5cbss1yxxj7LcJy0xniYzPf/evkIYxXK9QHlVw+mcf2tTIYxgyV6g7x+UBTHCPJY7A1y+
      MULTojB+r7tczRI2YckzwKtnrjGUlPUAwhyWOwMMjExRGw7IkkhRcpY8A/i8LhyyRZIwieUC
      8KyMBAsTWe4SaCKVJej34JICWaLEZDaosDVL3gN0D42TnZHq0MIclgvA4RNXGByR6tDCHJa7
      BFK1Ak6pDi1MYMlLoO/+72m6B2UqhDCH5c4AvcOT1FUF8LplUbwoLekFErZmyUsgIcwkARC2
      JgEQtlaSAOTTI/zsJz/myuAEqGnePPIyhw+9xNuX+kvxckJ8bMYHQFe53H6J6oZ6NFUjcbUD
      75It7N//OVI9F8ga/oJCfHzG9jXqOmP9XaQCi2kO3iQLTGQ0Yi0hFIeLmM/DJOC+XR36ToVo
      VZWpD6I8jK0OreU4fuw4+Ug9127eIB9JsXmRF129VeltOp/Hxa1uT6fT+ZFu0BdffJF0Os3V
      gTHitRXUVkd47LHHjGyeEHcxNAAOl4/PfeXrwIfVoZcGxnntXAeRNVH6ND9b5nhuVVUVPp+P
      /v5+4vWtBAIBI5smxKxKNhCWGkugeiqJBL0k+7vo6p9k1foNhH2/viv83QNhBw4c4Itf/GIp
      miTER5R0p/hQVfSDv9fEW6mJl+qVhPj4ZBxA2JoEQNia5QKQy2vM5GXTPGEOywWgZ2ic/sRk
      uZshbMJyAWhtrKZZdogUJrFcAByKIpWhhWksFwAhzGS5AIynskymc+VuhrAJywVgMp1jaloC
      IMxhuQD4PC58siBemMRyASgUdLRC2dbpC5uxXABmVE02yhamsVwAhkZTJMbT5W6GsAnLBaAy
      6CXk95S7GcImLBeAlYtrWNJQVe5mCJuwXABAQcaBhVksF4DOvqQUxxWmsVwAGmorqKsKlrsZ
      wiYsF4DTlwdovzZc7mYIm7BcADwuJ27ZI1iYxHIB2LoqzvqldeVuhrAJywXA7XLgdskZQJjD
      cgGYyuRITc+UuxnCJgyedqkz1HWOM5cH0LU80WUbuX9lgBef+yXeqhDOynr2Prhx3iO813WT
      1T0Jtq6SQkKi9Ayfd1y3ZC37lm6AfJLX3ugkE41Qve4BHloXL2qAS9UKaJrMBhXmMDgACmh5
      Tp84wo2RGTY9+DAOd5r84Dle6T5NPhDnC7vvQ5+nOnRjtILaSi+5nCyKEaVn+BnA4fGz9aG9
      tA528c6FS8Q/vZ3dexpQFHj74EFGgLpZqkPfMTSaYiw1Q+tir9FNE+IuBgdAo6+rE9Ufxq3q
      6JpKsr+L0bSTaIXCgOpmwwJHqAh4CcpsUGESgwPgoDpaQ9f1XjTFy/ZPbSPsU1C7OukfzrPr
      s4/gW+AIVSEf4aB8+wtzGH4PEAhHWb8x+pGfNq9YQ3ORR2iORYhHK41tlhBzsNw4gBBmkgAI
      W7NcALqHxumT4rjCJJYLQFWFX26ChWksF4BbA2QyEizMYbkAnLk8yIXrsiBGmMNyAQCQ739h
      FssFIJtXZYskYRrLBWBNc5TWeHW5myFswnIBuDUdWmqDCnNYLgCN0UpiNaFyN0PYhOUCcG1w
      jN5hGQgT5rBcAFxOB06HFEcU5rBcAKYyOVLZfLmbIWzCcgGIVYeIhgPlboawCcsFYCCZYlg2
      yBAmsVwAJtNZpjJSF0iYw3IBeHBtE/etrC93M4RNWC4AF7sTdPaNlrsZwiYsF4CCXqCgy3Q4
      YQ7LBSAaDlJd4S93M4RNWC4AE+kcUxmpCifMYbkAbFi2iNXN0YUfKIQBDK8OPXjlXc5cGUTX
      8tQs2cCO1bUc/b/XyRQKVC7exEMbW+Y9wrXBMW4MT9ASixjbNCFmYXht0NjyjXxu+SYKuRGO
      /uoqfe4EVWt38ummat74xS+YpoX5rvCV23+EMIPhleH0fJbTJ37JjZEZNj6wi+zQZWpjPhRF
      Ier1Mgl45qkO3dU/ytX+JLGquWOi6zqqpuN2We4KTnzClKw69PKb1zh14RIt1Q4yt5c4pvN5
      GrhVDXqu6tBBv4fKoB+v9+7SKB0dHRw7dozpnEpyMkNjtJLdu3fT2tpq9NsQNmF4dejeK5fJ
      ekK41Sy6rlPfXM9bZ9vxLqtiSKlk6wJHWFQVpCY8+7d/VVUVbW1taJrG+fPnaWtrIxwOG/sW
      hK0YXh26NraI7t4BcoqXB3beT6XfzY4NDnoTaR7ZtXXB6/vhsTTJyWmW1Ffd9btYLEYsFiOf
      zzM1NcXOnTuNbb6wHcPvAfyVNaxuq/nITyN1i4kUufPpsng1zYvkW12Yo6i7yKnhbpIZ0Gam
      GRxOAjDU101WXeCJH8Po5DTjqazxBxZiFkUFYOD8Ud4fgezEMG++cx6AM8ePMlGCz+nAyBTD
      Y7IeQJjjt+5HLHXdzlh1iFpZESZMUtQ9gMvj57v/9DWc6KhagZ//7L+paFzL9s8b36CB5K0z
      wMqmWuMPLsRvKCoAS3d+mR/s+PKHA096gbym4zZ8FEHqggpzFXUJlGh/hcNnhlAUBUVRID/B
      888+z2QJboKrQj4qZX8AYZKivsOn0ykUtxOdW/N0CooTRcuiaoDbmIYcPnyYTCaDa2ac9068
      Tv+VCPv37zfm4ELMoagAxDc8zEv//l2+c24p9dUerndep3HrPqoW2vP0t7Bp0yY0TcMZWUxL
      LEKsxpydIgdGpugdnmDbmkZTXk9YS3E3wcEYf/nNv+HChffJ5HVWbd7F8uZYSRYTNNRUEDJx
      o+yZvEZqWqpQ2FVRAZgY6OLUxesf/DvT2c7wzSHu37IRn8E3wmbvEdxSH6GlXtYe2FVRX+K6
      rpHP5z/6R1Upxdr1zr7kgksi+xOT9MtOksIARQWgoi5GuucSJ94+izu2im1r6njv7AVmSlDG
      f3FdGL93/jvrmnCAGhksEwYo6gJm6OwRJhbv5ptfqua57/0HBzMh/vQb36CyBJfqV/tHiUcr
      8XrmDoHP48LnKcEghLCdoj5FqakpVq3bQFUUVq5oZuu2P2ZdU2k2sXA6HEh1dGGWogLgCVTy
      9JN/xtN3fvCL00RaNvIPf/fXVBtcwidWEyKwwCWQEEYpKgAt2x/jH0Nx2vtSbN62ncYSbmHU
      0ZOgJRahsc68rlBhX0XdBE9eO84zP38XlzrOT/7rf5gowRSIO7xuFx6Xc+EHCmGA4m6Cu6/y
      yJf/nIeWOAge+BGJSQiXaCfTmrCfgE8ugYQ5igqA4nDw/Lf/mVd9MJ7ox3Oqm0Utq/iLP/kK
      YQOnQwC4nc5bE+6EMEFRAWje9hh/2/rRgSenx0+wBJfpDbUVxh9UiDkUFQBvMEJTUKYLiHuP
      lFYTtma5AKSmZ9AKJZhjIcQsDJ9PkLjezokLPTgKeSqb1/OpthA/ffYooWgYZ2U9ex/cOO/z
      e4bGWVwXxuOWniBReoYHINywgi8sWYeujvHG0cukkjmq27bywOp6PN6Fu4wyOZVcfv6BhsR4
      hoRspSoMYHgAPB4P2akkZ06/S8OaLXj8eQKZDk6duMq4VsHnP7sDZZbq0Hf+rRUKqNqtv+dy
      s0+LvjE0Sn9ics7fC1EswwOQnRzmxOkOVm15gPpIAF3X2bGzDkWBtw8eZBSom6U6tMPhQL+9
      wEBRFBwOx6wVogG2rGpkpKd+zt8LUSyDA1Cg69xpXLXLyY7dZCAXxq2O0JPIUxWAAd3PpgWO
      oGoFNE2KowhzGH4GqF++Dud4mmxWA1eQRfGlqNoNJqY1Htmzi4XGzpyKgsNyfVPiXmV4efSa
      +iZqfmOj9/qmpRS793tB10uy1FKI2Vjuu9bpcOCQFTHCJJYLgKbrJS/AK8QdlguAAiw0GXR6
      RmU6lzelPeLeZrkA6DoL3gMMJCYZGJkyp0Hinma5AHhcjgW3P10Wr2ZZvEQrcoStWC4AakFf
      cBxgMJliMGneGUDXdTLZvNyb3IMsV1xHuz0dYj49Q+P0DE2Y0p5vfetb5PN5BpMpopEAixvj
      PP7446a8tig9ywXg1kDY/HfBzbEwzTFzdpLcsWMHhUKBkydPsn37dkKh0lXEEOazXADm6wZN
      JpP09fWRyuTITI5x7tw5mpubiURKt1pt8+bNAPT29nLfffeV7HVEeVgmAJl0mnw+TyadJpN2
      k8ncPdFNVVXS6TSpTI66xiWk02lUtYQ1WsQ97/8Bi8/slXg7bQYAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='45' name='KPI View' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Predictors Analysis' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAgAElEQVR4nOy9d3wc13mo/czM9oZF772TIAn23kRJlKherGpLtuV+Eye2Y8dfvtwU59qO
      YyfXcRLbcZes6khWFyWKYu8NRCNA9N6B7X1n5v6xAMQukCJNQMLz+0kUVzNnzs6e95z3nLcJ
      qqqqzDLLxxBBEATxendillmuJ7MCMMvHmlkBmOVjzbQRgEgkcr27cFHC4TDTdaukKMq0fXfh
      cPh6d+GiTPRt2gjAdB1gs1w50/k3nejbtBGAWWa5HswKwCwfa2YFYJaPNbMCMMvHmlkBmOVj
      jebaNKvic44w6g4AYE1MI96sw+caYcwdIiElFbP+0o+WZYXGrhEO1vfg8oXISLSwtDyThs5h
      qlsGUVQVjSQiiQJxZgN5aXaae8eIRmV0WgmTXsvyOVmUZiciSe/LuaqCwxtgf203g2NeKgpS
      WFScjkYSae0b40BdN5IokhhnpGvQRVFmAotLUonTaq/Nq5rluiJcE18gVWbXm69izsxHA6Tm
      lpKiGWPrrlrSUi0MerRs2rAco0aYvCUcDqPT6WK3qyq7qzv51RsnMOq15KfbqW0bQlVVAqEo
      Bp2GUCTKRM8lUUBWVAw6DaIgEIpE0WklEmxGHrqhgrXzcxCE2LPG3AF++spRTHotmclWatqG
      qMhLpigrkWffrWVeYQp7q7sIhqMsLc/AGwhjNWj5yr3L0Guv0XzxIVAUBVmW0U5DAQ2FQuj1
      +uvdjQsSCoUwGAzXxhdIVRS8ikRuZia5BcWkxRvpbjhN/op1LF2+liyDjxFP4KL3O71BXtt/
      Gp1G4s/vXca3H1nDpkX5BEJRBAEqi9MAsFtiL3dCEEKRKPdvKGd+YSoaSaQsO4m3D7fg8oUm
      295T3YnVpOer9y/nwRsq+Iv7lnPwVA9Pb6vhkZsqqCxKIynOyKdvXYDXH+bbj6yhd9TLqY7h
      a/GqZrnOXJspTRApzkmhtbUF52Av6ZU3IYYlki2xWSrOYCagRlEUhWg0CoAsy4RCsYHq9Phx
      eYMY9RqSrHoikTAaKda0JIpIAqBCSrwZpzc0adRQVchLteHwBGjrcxCJRvEFw/QMOtCKdjSS
      SPeQk8wkC3I0ghwFvQYsBi29Ix5S7UaqmgfISLKQn2bjpd0NKHKEjEQLXQNO5uQkXJPX9WFQ
      VRVFUVAU5Xp35TzO/E2nG7IsA9dQAEoWrEQQgEgXr2xtpiRexheJ/UiBSAgDIqIoTqo9Z6pA
      KfECmUk22vocNHSPsdScicMbM11HZYVAKAoCdA64xp8HqDFV6HBDP009o0RlBYc3xKgrwH+/
      XsXcghQe3DiXeQVp7Knp5KYlRRj1WvodHryBCLlpdmrbRyjOTuado+3sr+9lTl4ynqBMS5+D
      u9aUTcvlfFYFujImBPOa7AHk6BjHjvRQNr+AkdP7aFPmsDrbxbt1YdYvSmfv/jrW37QJm0Ga
      vOdMAQBo6h7l3188zLDTR5zFgMMTINluZsTpJxyVz3reuHqPViMRlZVJYYi3GvnslkqyU+N4
      +3ALnkCYz922kOffq6ehc5h4m5Ehh4+HbqggNzWO//viIcwGLV2DLnzBCCVZiTi8ATYtzOXu
      dXOQxOl3aDYrAFfGxB7gmgiAqqo4epqoOt2FKTmfZfMLkQSBgdYa6rtczFm4hHS78ax7zhUA
      ALc/RF3bEN5AmBS7mTl5yXQOOqlvH+b1A004PAEevGEuSXFm+kbdvLr3NJ/YOJfUBDMv72nk
      ztUlbFpcAMCIy88PnzvAV+5eQlZKbHUZcfopzEogxW4GwB+KUN8+hCiKxFsM9I16yE2NIyXO
      gE6nm9xITydmBeDKmBCAa6ICCYJAQnYpm7JLz/o8rXA+aYVTb8dm0rOqIvusz4qzEslLs/PG
      wSYWlqTzwMa5CILAwJiXNw40YzFq2VCZx8G6HgRBQFXVyT8n+iaJIsVZiRRnJZ7VtkmvZWlZ
      5uTfCzLigent1TjLh2P6netNAVEUKEiPJxR5XxWqbx8iIr//95uXFvD0u7XEWQwkWI28fuA0
      WSk2MpKs16PLs0xTZqYACAKf2ryAv/nFe/zTU3vQShInmvpItJpYMScLgEUl6USiCn/YUY/H
      H2LF3CzuW1eORpp+evws149rYwi7Ai60B7gUqqrSPeTmyXeq6eh3kJMax2ObK8lLi5vU1VVV
      JSorqIBGFBHFK9Phw+EwWq12dg9wmcyEPcCMFYAJIlGZiKyglUQ0knhNBumsAFwZM0EAZpQK
      JCsKB+q62X6sDVEQuGV5EcvKM9FqpA++eZZZLsCMEQBVVdlxop33jrdzx6pSFFXh+R11DDp8
      FGbEU5SVMC19dWaZ3syYERMIRXn3aBufvrWSOXnJMX+hfad55t1aCjPj0WslvnL3MpLtpuvd
      1VlmEDPmSERWFILhKFaTDkVReWFHHfbxI87P3bYIrUbime01RM6xEs8yy6WYMQJg1GuZV5jK
      W4eaGXR4Od7Ujz8UxWrW8dNXjjLmDnCwroedVR3I09AxbJbpyYwRAI0k8okNcwiGZf7tD4dw
      eUN4g2FGXQE+s6WSO1eXkpls5bX9p2nrc1zv7s4yQ5gxAgAQZzbwqc3zKciIx2bWMTjqxWzU
      0dw9xqv7Gnlg41wq8lOoaR283l2dZYYwowQgGI7wqzdOsK+mizF3gEA4SueAkz/srOf+DXNZ
      XJKOwxPAbjFc767OMkOYMadAACdbBjlY34NOI1JZlI6KyvHT/fhDEQ6f6qG+fYhgWGbJGQ5t
      FyIckXF6g2gkEbvFcMUW4llmPjNKAFr7xkiOM6GRRB69aR5mg5a/7tuO2aDlQH03ty4r5s/v
      W4bNdHHr45DDx/M76ujod6LViKyal8OW5UWzxrSPKTNKAHQaiUA4itmg5eW9jZzuGsHlC5Fg
      NZKTEscjN1ag1138K4UiUX6/rYZku4lvPbIajz/EU+9UE2fSs2Fh3p/ui8wybZhRe4D5han4
      gxH6R73sqe5k1B1AVVQ6B51kJdvQaC79dQbHfAw6vGxZUUxagoXirERuXlrEnurOP9E3mGW6
      MWMEQFFULEYdRr0GQYgdi8byAoncvqqU1j4H4ciljWCSKCDApLFMVVWC4VgKlVk+nswIFSgY
      ivLK/ka2H22bzP9z15oy1s3P4cm3q4lEZTSiSFRWCEdkNBoR8QKemxOz/tPv1nLbimIcngBb
      Dzfz2OYF1+FbzTIdmPbu0LKi8Nz2OrqH3GQlW6lrH0JWVAQEPrOlkme319LW5yA/Ix5/IEJE
      lllfmcudq0ovuB8IhKK8cfA0+2q6sJr03LOunEXF6VzK03nWHfrKmAnu0NNeAByeAP/05B6+
      9sAKLEYd//vXOynLSWJPTSeiICAKAiU5iXh8YZ64bSF6nYbn36slN83Ow5sqrkomh1kBuDJm
      ggDMmD0ACNgtBv6/R9fSN+pBUVQqi9L48Z/fgtcX5rHN8ynPTaIwI57HNi+gqmkAl3d6JmWa
      Zfow7fcANrOehSVpPPNuDQ9tqiAUkZFlhS/csZgbFxcgCKCMZ36YmKEnskBMi6VtlmnNtRWA
      iIsDh1tZtGohBlFgsL2Ohm43ZQsWkRY3NXcFSRS5f/0cXtnXyL+9cBCNJLJpcQGbFudPWnA3
      Ly/ihR31GPUa9FoN/7OrnvmFqdjNF19+3b4QTd2jGPUaSrITZw1hH1Ou2R5AVVVq9m7lREeA
      ux+5B+NoA+/UBFhTmcqBw42sv+kGbPqLZ4Y7F0WJHVkigFGnOUsfj8oKbx1qZvfJTqKywuLS
      dO5bV47ZeOH2TneN8Ms3TmAx6giGo8RbDfyvu5dhMV34+tk9wJUxE/YA16w+gLe/jmF9CQUJ
      DQB0Ng8wd9lqEuMMFCa0MuILYNNbptyiKAqYDBf+kTWSyO2rSrhhYT4KKma99qyaAGfiDYR5
      fkc9t68sYcXcLCJRmd9vq+H1A6d5+MZ5l/9VZ5nRXBMBUMJejtaPsnrjeo68HROAkCqRrI0N
      SqPOQATlotmhL5cRp5++UQ8pdjOpCWai0QjjzZ7H4KgHjy9IWXY8giqjk2BhUQqv7mvi3rUl
      F7xHluVpW/JzNjv0lXFNs0MHR3sYGBli25uv0dXczIAhmUWmKGO+KOkmHe6gj3hBc9Hs0JfD
      vtou/rinAYtBhy8Y5sYlhdy8pOCiK4DdJqPRSDj9EdKS4lAUlb5RH5nJtosu17Mq0JUx3VUg
      uEYCYEov55GHywHY/cbrzN+wDKu/h6279xJKt9IXMFFyFXz2h5w+nt5Ww9cfWElmspURp58f
      v3iIgnQ7pTlJF7wn3mpk0+ICfvNWFYtLMvD4QzT3jPGVe5Z+6P7MMvO45segC1evwSQJaGw5
      bFyjZ8QVorgiA6P2w5sgGjqGyUmNoygzAUEQiMheQOC3W0/yiQ1zWFCUdl4qRFEQ2Lgwj2S7
      iaMNfZiNWr563zIykmwfuj+zzDyuuQDY4uMn/9sSn4ol/hIXXyYJNiNj7gCRqEzHgJOfv3qM
      EXeAxSXp/GHXKZzeEBsX5Z3nF6SRRCqL0qgsSrt6nZllRjLtDWEXQlVV2vocHKrvoXvIzX++
      fJQhh49gOEqcWY9Bp8Gg1fD6gdMsLknHbp0NkZzlwswgV4gYqqpS1z7ET146gsmg4641pdS2
      DdLUPYLNYsDpDXLoVA+dg066Bl0cPd03bU9wZrn+zKgVQFVV3L4Qz79Xz11rSrlhUT4AeWl2
      /u8fDtI75CYrxcZjmxdw7HQf24+38eq+RhaXpJNgM57XnqwotPU5ONLQh0GnYfW8bFLjLZf0
      DJ3lo8WMWQEUVaWmdZAfPn+Apu4R3j3WRnPPKKqqkpMaR4LNRCgSxeUL8ez2Wpq6R/nMrQvx
      BsK4x8ukqqqKNxBmzBMgFIlypKGPHz1/kBGXj/5RDz96/gA9wy5C4SgH67v5/bYaDtb3EIpc
      xKgwy4xnxqwA/aNefvVmFY/cWIHdYmDY6edHzx/ku5+/gYP13ZTnJtE34kGSRG5bWUxpdhJH
      GnvRaiQMeg2yorC/rputh1rwByOkJpjpGnAhywo9wx7Wzs8hPdHCc+/VEWfW0zngoiw3idf2
      N1LVZOXzdyyZ9Rf6CDJjBOBYYx+l2YmsnJtNcWYiP3rhAG5fkO/8bjcmg5avP7CS092j/OTF
      w7y46xR6nYa23lh50xS7mdq2QV7f38Qnb5pHvM3If7x0GG8wzF89tAqTXsuT71STnWyjtnWI
      ZLuJ739xE3ptrCL9t3++nYbOEeYXpl7v1zDLVWbGqEBajUg4EnNJSLKb+PtPryc1wcK6Bbn8
      3afXc+x0Hy+8V4esqrT0OmjtdfDADXO5b305giCwp7qLRJuR3mEPA6NefIEIOo3EkMNHQUY8
      t68sZldVBzqtRH56/GSqdb1WQ35GPF2Druv8Bma5FkzrFUBVVcY8AU42D6AoKi29Y7x5sJk5
      ecmcaOoH4I5VJeyp6eLXb1URjSrEWwwYDVr6Rjy09ztx+oIYtBra+x0EwlEkUaSha5hIVMGk
      1/LCjnoO1ffg9IWwWw18dstCnnqnGm8gjEmvxRcM09g1wi3Liq7z25jlWjBtQyJVVaWhc4T/
      +OMRclLjCIQi9A57SI03M+oOUJqTyOObKzne1Mdvt54kEIxgM+vJSY3jVOcwynjccLzVQFlu
      EnVtQwRCERJsJpLtplihbIuRL961mGON/Ryo6+Ir9yxjWXkGL+5qYMeJNgozE2jpHWPD/Bwe
      vHHebKHsy2S6+wJN65hgbyDMD57dz+0ri1k+J2uyJoDDE+Qr9yxFVVW2H2/jnSOtDDl8uH0h
      LCYdZoMOnVZkyOFHVVUevWkez26vw2rUccuKIk42D9A16MIfjLCwJJ2+ETdGvZZ71pazqiIb
      QYgJX8eAk9Y+B4UZCWQkGGcLZV8BM0EApt+UNo7HH8IXCFOUmQDE4gEWFKXR1DMKgKrCGwea
      eeK2hZgMWlRieX+GnT5UFYLhKNkpcSwsTsduMZCfEc/da8r4zmc38u1H12DQa7h9ZQk/+Ytb
      +cGXbmRVRdbk+b8gCGQkWbGZ9Aw7fWfVI57lo8W03QNYjDpMBi0dA04S40woikp9xxCZSTaO
      n+5DJZbgShJFijITsJr0DIx6kZVY+VSrScdjmxfg8ARw+0Oc6hjiH3+3m+Q4E/Udw2gkEYNe
      uqBaM+Tw8c/P7sNqjM1ez24P8O1H15KWMPUAnllmBtNWBVJVlarmAX679SSl2Yn4QxGaukcR
      BYH0RAuKCg2dwxRlJhCKyHQPubCadDi9IRRFpTAznvy0eI6d7sUbiCArCqoKeq2E1aQnP93O
      Nx9edV5hPVlW+PGLh8lPt3P7yliAzJsHm2jtc/CXn1gx7Qptz6pAV8a0L5MqCAKVRWl86+HV
      HG/qQyOKeANhFpeks3lZEaqq8ss3TnCwvgeTXkskqjDmDgKQkWihf9RL74iHUDiKQadhVVkW
      J5r68QejBMNRynKSEAWB7cfb2HOyE4New5YVxZTlJNHSM8qDN8ydTJm4qCSNbcfaYlnnppkA
      zPLhmLYCADG9PzvFRnaKDY8/xNtHWlhanolBFzNQtfU50Gsl4ix6wpEouWl22vudserwikoo
      HEUFEm1GHr+lktR4C9uOtmLUa2nuGeWNg02cbB7kluVF+IMRfv9ONQ9tmkdqgoW2PgdZybEY
      gc5BFyl28+zg/wgyrQXgTLSSRLzVSFuvg1FXgJf3NtAz7EZVmTzTXzs/l2GXn1GnnyS7icEx
      HxpJYMjh59V9jWg1ErKi4vQGMeiSePdoGyaDlqONvdy8tJA7V5fy1qFmHryhgp+9cpTW3lit
      sRPNfXzpzqVoPyD79Cwzj2m7BzgXVVXZfbKTX75xgqgcK5kqCgImg4ZQREZRID/djqqqdA66
      xoPFVTQaEatRj9sfQhIFwhEZnVaiIj+Fhq4RHtgwB1EU2VvTydKyTI419vIvX76JriE3+2o6
      UVVYXp5OYWbStKwkM7sHuDKm/R7gXKKyQn3HEKsqsjhQ18PmZYX0j3qoaR1CFIVJS3FynAlZ
      UdCIIhazDl8wgtMbRFFVojIUZsSzel4OL+0+RVqCBV8wwi3LiwhFory8t5EHN85FEARyU+PI
      vWk+EBPOaWgCmOUqMGPW9GA4SmPXKFtWlJCXFofZoKWtz4lRr6EiL2XyumGXH0EQkCSRyuI0
      DDoNKip6nYYVc7KwmfV0DDjRaiS2LC9iYMzLD5/bz66qDhJtRm5ZfmmXB1lR6Bvx0DngjCXq
      mmVGM2NWAEkSsRh1uHxB7l5bzvef2YtGFNHrNAw4PGddq9dKBEJR9lZ3IUkCqBBvMfD4rQuQ
      ZYXvP72PcERm1B3gU5vn0zng4pW9jSwpy8BwiRJLwXCUF3bUcapjGBVItpv51M3zp2QfUFUV
      lzeE2x/zObpUHbNZ/nTMGAEw6jRsWVHEM9tqWF+Zh0Eb0/0TbSY6BhzEmfV4/GEUVSUzyUbn
      oBO7xcCoK0BhVgIaUWTniQ7irQZCEZll5Zk0945R3TqIoqhkp9hYWJzGkMNHYpzxggaybUdb
      6R/18tX7lqPXaXjnSCvPvVfHV+5ecp494UwUReVwQw+v7W8iEpUx6DQ8tKmCivyUi94zy5+G
      GSMAgiCwqiIHk0HLzhMdpMSb6R/1YtRp0GslvIHY4LeZ9bT0jgGQYDXi9AaJM+vZsqKYfTVd
      vHe8DZ1W4r715ajAwKgHnVZiX203//XyUQRBYF5BCg/eMPe8QX2grptPbJxL5vjx6E1LCviX
      5/Yz5g6Qnmi9aN87B508/149T9y2kKxkG809o/z0laN87/ObZmsaX2euiQCoikzzyQOc7hlD
      0NtZsXoliSaBhuMHaBnwUjh/GeU5yVzuoYokCiwuyWBxSQZjngD/58k9nOocRiuJyErsMCsY
      ik5e6/aHSEuwYDbE3J4BPP4wGknkxy8eIhiKYjHqQIDcVDt/9dCqyVyhbx1q4Z61ZWc932LU
      4fIGUcfTsfuCYSRROCtSLByVJ59hNekQBYETTQOU5yZNBtQsKcvg3WNt1LYNsXZ+zpW+5lmu
      AtdsE2xLL2LL7XeycWEc+w824eyoolvJ5Nab19FbfxxnIHLFbQfDUd461IyqqlgMOqKKgigI
      aCSR8HgBPI1GwukNsnZ+Ll+9bzlr5mXTOeBkfmEqZqOWIYcPg17DvevL6Rlyk5dmJy3BQnZK
      HPesLWNnVft5z719VQlvHmzmvePtHKzv4al3qllalkmCNRZwP+Ly84vXj/NPT+7me7/fy7aj
      rURlBZNBgy8YRhkXUkVR8YcimPQzZgH+yDLlX6DuyC7SKjZgDvbSOBhhYXkeLSd2oS/cQHbc
      2dcKokRKcgIuxyAt9f3kFq+gr/MEZYsXoNXryUs0MxYIEm88+/FTSfCqqvDa/tN09jv52gMr
      CIVl/uaXOxAEMJyRNt3pDWIz6XB6A/gCERo6R1halsHda8v40fMHmVeQwsmWQXyBMBajjoP1
      3dyyvBAB8AUiGLSayf6oqoqqqswvSOGTN8/jrYPN+EMR1i3IZUNlHhBL3f67rSdJijPyzYdW
      4fIF+f07NViNOpaVZbDjRDsv7T5FaU4SJ5r7UVWVioKUD53UdqJv0zE57nTtFzCZKmfKAtDd
      2oClZAMa9zCNHQEWlucx1NmAOeN8AQCIuIc4efI04QjkaiXCooh2XOfRiBpkIfbDTWTpPTNT
      9KUIRWT2VHfy1XuXkhZvQlVBkgSC4SjhqMyEWU8jinzxzsUcbezjd29X4fAESLGb+MOOOlze
      IP5glHBE5s2DTbHMEf4Qf9hRS1ayjZf2NHLvunK8/phvkSQyKVhzcxOZm5t4Ro8UolGF7kEX
      Qw4fn7ypggSrgeQ4A5sW57PzRDtLS9P4i3uX8cd9pzl0qofSnCS+8cAKBDV274dhOg+yqf6m
      14OJdzb1NVhVCAYDBENhIuEwgUCAcETBfKFLVQXJlsGGG7JBGeO1149TmQ39owHSjRpGfF6y
      JB2iKCKOn7aoqjql7NCqEEUjibQPuGjqdWDSa8djhWFJaQZt/Q7G3AFkVeGZd+sIhqN4AiEE
      QaCxa5SUeDN56XZGXD6iskLnoBu7Rc/i0gy2HW0nEI5Smp1E56CbF3c1gABr52Vx99o5l8wK
      oR8PmBFFCZ1OFxuYKui0GnQ6HVmpOr563/Ipv+6pMp0twVP9Ta8Hl70C4Bviu9/8wuRf333x
      VxgTMvmrTedfqsgu3nv1PQIaLUo4SNb8DeTk6zn1+tu8fFTAmDKHhVeYrlASRVLjLfzs1WMU
      ZSYw5PDFyqYKcOx031nX6rQiLl9sBlIUFUkUGHL4GHL4QGAy+uuuNWXcuryISFThQF03gw4f
      1S0DLC7N4J51Zbywow6tppk715ResP4wQEaSlZxUG89ur+X2lSWMuv1sPdzC47M1iKc1U/YF
      6m+pJWDNpSA1dgSohj0cO9HCvBULuRoHeVOtD3CqY5ifvnyUW1cU886RFmRFoXfEQ16anVBY
      pm/0faOYQachEpURBAGLUYckCXh8YTQakUAoMllMb05eMjcvKeSXbxzHYtTj8YcozEigY8CJ
      2ajl0RsreHF3A//8xRsx6i8+0/qDEV7e28D+2m5sZj33b5jD4pKMa+pGMZ1XgI+UL1DtiYMU
      bJrz/gdaE77OI7QWLWTuhVPxXxNaescoy01iy4oibl1RBCp87+m9HG3sO89dWa+ViERlFEUh
      2W4iK9nGmDtAdesgoiAgCFCcmYjNrOfXb57AH4pO6vpLytIJRaKMuP28sLMegQ8exSaDlkdu
      nMfDm+bFVhi4ZoPf5QtS3z6MQSdRlpPINBz/M4IpC4BBitLY0kVhYj4CEPYOcro3SPGFNgHX
      kPz0eN473k44IqMfjwsYGPOSnWIjPdHKiaZ+jHoNkiiSlmCme8iNLxihZ9jNopJ0TnUMT7al
      00hEZIXWXgf+UBS72YAgQFRR+O3Wk6hqbBCPAsl2E2PuAJnJlx5pwrhgXQtkWaGld4ymnjG2
      HW0l2W4iEIpgMer4/z+17to89CPOlFWgwFgXv//VL6jpDRJvERjzarnzsc9x8+KCKcyNH8xU
      VaCorPDUO9XUtQ9Rmp1EY9cIJr0WrUbkrx9Zzf95ai+jbj/DTj9RObbTl0QBnVYiHJFjM7kA
      SXEmUuLNdA44yUiykpFkRa/VsPVwMxmJVsY8AVQVwpEodquB21eW0NLr4GsPrEB3HVIkBkIR
      frv1JA2dI4y6/Oi0Ep+/fTELi1P54+5T3LysmJT4P/Fs9AF8pFQgY0IOn/3Lv8Xr9SOroDUY
      sZqMV2XwXw6SKPKpm+dT1z5Ea6+DxzcvID/Dzj/8Zhcv723E7Q8x4vQjigIPrq/g2Olehp1+
      KotSOdrYRzgiYzcbkKRYzqCuQYGOASePbV6AKArsPtnBiMtPJKqAAAa9Fpc3hNMbonPASSgc
      nbIAeANhWnrG0OskirIS0EpXLjh7arpweUN8+a4l/PrNKu5eW8rLexsoyU5gbn4y3UOuaScA
      M4EpC8DpI+9ysn3srM+0JhvrNt1Kkumq9+uiCAJoNRILi9NZWJw++flNSwt5dnstqhrb/Gq1
      EtuPt7K4JB1VhUP1vZNxA7KiYjcbqGoawBcMo9NKPL+jDrcvhF6nIeiLxQ8sLc2gNCeR4429
      HDrVTYrdPOXB39bn4JevH0erie1DEmxGvnz30pjrxRVwqmOYBUWppCda0GklDFoNJr2WniEX
      3UMuKoszr6jdjztTdoUwWOwkJiae9U9CfDzTJUrw8KlePrtlIV+6czF56Xb+7J6l2M0GlpZl
      Muryk59h50t3LaY0JwmnN0hL7xgmg5YblxRg0mtp6hrl87cv4msPrJhMh3KqY5iX9zSi1Wjw
      +MPMzUuZDJS/FP5ghOfeq2PDwjy+/egavv3JNZgMOl7bf/qKv19mopXOQRdWk55blxfx1LYa
      uodcvLa/iWOnByfjl2e5PKY8fJPSkhloquFI1SlMWXNYMS+buiOHcYWvZfemjrLrGEgAACAA
      SURBVMmgJRiOsrQ8k3kFqTw/nkXutf2nCYSi3L9+Dhsq8/nrR1dTnpOErChEojKyojK/MBVZ
      UYnICvPyU/j7T6/HoNOwsiKLv35kNQtL0jAbdKxdkDul7HBufwiHJ8CCwjRMBi1xZgNLSjOo
      bx/+wHsvxm2rSijJSuRfXzjI20dayE628Y2HVvH4LQv4s3uWTMtwzZnAlFWgo9vfQFO4invT
      VF5//ue8Iass3/wQmdcpV5Sqqjg8QYadPpLiTNy3vpyfvXKMIYcPQRDoGnQTCkcZ8wQA+OUb
      J9hT3YlWI9I+4MRk0LGqIptBhw9/MIwoQigcxekNMeLyIysK+2q6qWsbxuMP8fk7FpOZfHGX
      5zOJtxrITLbx3ol2Ni8rJBiOsuNEGyvmZl3x9zUbtGxclMeikjSC4Sh2iwGjXjtpB5jlypjy
      KdBbz/6Uslu+REECvPmrfyZa8Qi3L89DukoTz+UUylZVlcOnevnjngYkSUSWFe5cXUpWio0X
      dtRzrLE3Vi/ME5xMiHUmkiigqIy7NUN2ig23L4xeK2Ex6egd9hAMR2N2BFlBUVRKsxN59KZ5
      VBSkIn3AbDuRxe5Xb1YhCgJajUhFfgoPbJx7yYizK2HWEHZlXPYpUMTZy0++9zcYNOAc7kPX
      8HOqdqbymS9/jVz7tezq+QyM+XjynWr+/N5lZCXb6Bv18J9/PMJf3L8crz+MzWzA4wtNHoOe
      iyAICKhoJYmILJOfHk9ump2qpn7sFsNkOhRg8pSrqXuUHz1/kIXFMbUmPdFCz5Cb1AQL6yvz
      SIozIQixdI3bjsWSbWmlWDKv21bOIdlu5sm3q9FKIhsW5pGfHj8baD8NmPIK4BzsZsQTOusz
      UaMjPTMH41WYfC5nBdh2tJXqlkG++fCqyc/+/cVDdA26ae93TApFZNzTUgDO/JKCEBMCVVEx
      j7tI5KTE0TXoQlZidcTirQZc3iDLyrM42tiLrKhoRAGVWMKuSFRhUUk6JoMWjy/EE7cvIjvF
      RlXzAC/uOsUTty0k0WakumWQ53bUYTHoWDEnk3BU4WhjL1++a8lFq9lfDrMrwJVx2SuAyWqh
      79gh2pwiqzbeQEnGVax4fZnEmfU4vUFkWZlUgZzeIF2DTkRBoPOcai6xjas6qQqp6vvegIFQ
      BK1Gor5jiDO9il2+EKoK1a0DKOPXymqsDUkUMeo09I64SU+w0jHg5PtP7+XutWW09TpYVJI+
      mdV6QVEqz2yv5dblRdy4pABVVUlLMPPCjnr+7tPrr/m7+lMSjsgcb+rnVMcwGUlWlhSnkKTT
      T+uVbsqnQCe3v0TNiEB2PLz8/MuMXXlA14dmQVEaGknkN29VcehUD797+yQtvQ4isnLBl62o
      6nn7gAlkJRbMcq5LvaKoqEAgFD1LcFLsJoqzEnjghrmMOP0UZyVw45IC0hIs7D7ZQed4XMC2
      o638/p1qjjb24Q/GHO8GHT4cniDZKXEMjHkv+v2U8ex1MYNcbIMbikQZcflxjdsophuKovLC
      zjrePNiE2aClpnWQX71VjXs8pmK6MuUVYMQbZssd91KQAHj+myEXJPwJneDORK/V8PUHVvDq
      /tO8ebCJtARrzN1BI02GRF4Jwvi/VJVJZ7mJWOMJDDoNPcNuTAYtiqri8gUZGPOxYk4m3kCY
      d462crp7hG1HWxEFAVEUiMoKv37zBJIkYjZosVsNFy24F4kqbD3czL6aLiKyQnFWAjcsyuft
      wy10DjjR6zRsWpzPxoX50ypXaeegkxOn+/nfj68nwWYkKiv88Ln9HKzr+cBcS9eTKQtAyNHL
      b//rh1h0MNDRiLHRTUpyEvd/8gmy/sQ2GEGAOIuBx8Z97Q/V97CnuhNZufhMPxVEUZgc8Iqq
      nr1xGKdryA3A0cZY7MHOqg4kUaRn2I0sK7h8IebmJZOWYKGhc5ghhw+TQTu5QR5xRXB5gywu
      yUBRVfyBCCoqZoMOURTYW9PJ0YY+Pn/HIswGHW8ebOK7T+3l1hVFPHhDBQ5PgKfeqSbObGBZ
      +fSx/g46fCTEmSYt3RpJJCfFSu+I+zr37NJMWQBWbnmUzOGJZXsjAJLOSNw02ON0Djox6jQs
      n5PFu8daz5u1p8ql7tNpRMIXCF+MRBUEjYDXH55cfQbGvNy8rJDEOCMv7mpAUVSeuGMRdouB
      F3bUU56bxJ6TnYgi7KvuQgVWzM3i7jVl7KrqYMvKIoqzYmGXK+Zms6+2m5Vzs0lPtJCeaGHD
      wjz2VHdOKwHIT7Mz5PDRO+ImK9mGPxihYTyT33RmygKQlj+HtPxr2ZUr5/CpXvQ6DUcbe8lM
      ttE96LrQ5D0eAXbxdi6lQkVlBYtRhz8UmczuADG1aeIecbz9UXeAn796jNxU+3hOUoW2Xgdr
      5ueg10oIwIDDy8nmQb56/3IEQeCZd2t4dV8jkvR+OdiJgB3grD8jEXnaFe1OTbBw77pyfvT8
      QTKSrAw5fczPT2ZxafoH33wdmTHZoS/FN3/6Lnnpdo40xBzextyBK+6HNK4G6bXSZdUGM+hi
      BTa2HW3FGwifJWwTbUqigFGvJcFqYMjh547VJWQl21hSlsGIy8+P/+cQW1YU88bBJjZU5pGX
      ZufdY600do6yuDSdzcsKGRzz8dKeBj53+yLm5iWfdQyqqrEj3GOn+xEFWFqWiVGvmZL7xtVi
      YMxLa+8YqfEWMhNNGI3TM/HXtK8SeTnsOtnBL18/QWaSlZR4M3truibDISfO7KfChLfoVDjX
      tgCx41mXL3Shy88iNd6MwxOgMDMBi1FH74iHT940j6e31aLVipgNOsbcAQbGvGgkgdxUOyaD
      ljF3gHirkQc2zmF+YRqCcLYdoGvQxfef2UdmkhVVhf5RD//wmQ3XzU16JtgBPhICoKoqu052
      8Lut1Ti9QfLS7PQMu1EUhaQ4EyMuP6oa2zgnxhkZGItVir8Y0hmb4Uuh1YgfKFwTxfp+t/Uk
      KpCXZqetz0E4EqUkO5HP3b6Ig/U9vLK3EZNByy3LivjExjn84Nn9oMYc625cUsDWQ8382b3L
      Ju0LE7P6hACoiPzLc/tZMTeLTYtiuupbh5qpbRvimw+vui41jmeCAEyfc7QPgSAIbKjM40df
      uZm5+ckMjHkxjmddS7KbY4NFiMXRjrkDZ83yoiiQkxo3md0N3t8Mn+m3I51z5HjmyqLXaiZd
      Js7VNrz+ML99qwpFUQmGonQNutBrJXLT4kmwGfnPPx7hQF03VpMei1HHgqJUWnsdhMJRHr9l
      AaoK8/JTWFWRw66qzvGQy/NVmlAkSv+oh4r8lMlrKovSaOtzTHlV+zjykRAAiAlBst3E1z6x
      gtzUOAQh5vDW0DE8eTyqquDwBNFrNcSNJ6VVFJW+ETcOz/n7hjPz/8vn+BWdOah0WmlSHTp3
      PVUBfyhKIByNZZcrTEUSRXqHXQRCUe5YVcq6BbkUZsRTmpPEqY4RorJCVFZ47UATPcNufrf1
      JANjXuRLJMDSaSVS4i00dU/UUVap7xgmNzVu1lX6ElwjFUgl7BmhqqaRqNbO4sUVGCSBoY5T
      NPW6KZ5XSart7M3Rh1GBznqyCk++fZLOQReLitMmi2v/+o0qVszNJDfNTkF6PD9+8RAO98Wt
      qlNRb64ErUZEp5UmVTBRjOWb2Lgwn9tXFfOzV49hM+mp7xhGlhVuW1nCqMvPvtouvvHgSlbP
      OzuZ7oQKpNFoaO4Z4ycvHaY0OxFFheaeUb718GqyU2wcb+rnzYPNhCNRNizMY0Nl3jU/SfrY
      qkCKLFNdXUtm0Vzy473sPNhMYOgUB5u8lBSmcWTvPjyha+PDLgjQ3DPGluVF3LG6lJzUODKT
      bOi0EretLOHuNWXUtw+hlSQUVUUriReMaz5z8IuCgO4CoW9GveayC+dFogqhcKxGQNJ4AXBZ
      UdlZ1c7PXjnGp2+pJDslDptJT0VBCsdP9zHk9JGXZudoYx8u74VdC4acPnZWtSMrCtWtgyTa
      jPzDZzaQnWLj2Ok+nttey4bKXO5cXcbemi7ePNg8qxpxjVQgQZRYvGoDWakJmE16tJKGzqZ+
      5iybR0paHgXxGkZ8V35U+UFkJltp639f943KMhFZ5khDL4NjXoacMZ8aq1EXK6n6Ae2pqopG
      I50VB2DUawhH5Iu6XJ9LnDk2EwoC2Mw6whGZEZd/8v/Likpzzxh/3NPA3LxkUuLN/Pm9y/j2
      o2tIS7Aw4vZT2zbE957eS1370FltewNh/v3Fw5gNOp7YsojlczJp7hkjzqxHEARe3Xea+9bP
      Yd2CXJbPyeSxzQvYW9PF4VM9dA+5PtaCcE3ycwuCAKpMS9V+WlwG1q7Ko/VwF8m62JJr0hmI
      oJyVPFWWZUKhDz5CnAq3Lsvnv18/ydCYF4tJR33HCHetKqFnxMMPnts/mZBWr5OIyBqC4SgC
      sdOf6AUGg0oszncCURQIhqKIojBl14uJ41FVBacniKLGDGcTjxNFAZNew8mWARyeAH0jHt48
      0EjnoJv6jhG0GpHHbq5AVVWe3V7L1+5fis2kj539+4PYjDo2Vmbz7rF2ugZctPSOcbShh8Ul
      aXgDYQxakXA4Fr/aO+RkcMzLawdiFWsWFqVw56qSKcU7Xw5X8ze92kxE0V2bAhmqQvPxvThM
      BWxal4NWFLBoZRz+KOkmHe6gn3hBgyiKk3r/1doDAOSl6/nLT6xgf20XHn+YT99aSVlO0qTb
      tNMb5McvHp4MWBGE2ElOMBydPEK91MyuqiqSJE559j+XiUF/pqwpioovGEFVoWU8IOd/dseC
      6E0GLYqi0jPi49YVRWw73sGYJ0xyvA1FUZCkEDqdhl++WU1GkpWblhYy4g7w1uFWlpRnsW5B
      Lu8ebyc10UokqvDcjlMsKcvgM7dW4gtG+NmrxyjoHGXl3Owr+j4XY7rvAeAaCYASdXGioZ+K
      Jak0NzZgTcwgu7yIt/fuJ5Jpo9tvoPgalgYSBEhLsHDf+jlnfa6RRFITLLFkusRm3USbiVF3
      AJ1WIhiO0jfqQaeRzgqlPNdAdmY8wdVgon1VjfW9LCeJgTEvDk8QkyFm4U2wmdl6uJkxT4Bo
      VMFien+y0EgC9e3DpMSbuG/9HDoHnKCqBEJR6tqG2LKimOe2B/n3Fw/jC0QQBYGHNlUQZzEQ
      ZzGwsDiN6pbBqy4AM4FrIgCiZGTlyqVMJIyQJBFNXC4bVuoYdAZZV5aFSXv9TmDNhlgmOZNB
      i8mgJRCOMuYOxNyXBYHoOXHEynj26TM/kxUVSRKQ5akLgl4rkZ8RT2PnyFmfnytcSXYT4aiM
      wxMkOh6TnJpgxu0LseNEOzcszCc94f0AfZvZwOp52eys6uBfnt2PKAp84Y7FvHO0Fac3iEGn
      4bFbFjA45qNr0MWLu0+hHbdryIrCoMNHku3ykjupqorLF8t+YbcYsFsMV9Xl4lq3P8G12QOI
      BnKLi8/73JqYjjXxAjf8ifEFIwTDMg6vB1lWSLAZyU6xUdMySEl2IvMLUnh5b+N5uv+ZjAeZ
      Tf6pnvH5hKDE7G8CiXFGhp1+ZEXFFzg/j8y5wrW3umtywz2xWh1p6EVVwW4xTLp4TCCJAusr
      8zhU38OmxfnMyUvGGwjTMeDks1sWjl8jkpFkJTXBTG37EL94/TiLSzPoHnLTP+Lh3nPqoV0K
      VVWpahngf3bUIysqoihw99oylpVlXhWbg6qqnGwZ4A/XqP0z+VgWqdJppUmvzCduX0SK3cSp
      zmGGxny09zn4zK2VxFkMPPl29eQ9Gim2Yri8Md0xLd5CeV4yRxp68QXCZwXQaCRxPKJMZUFR
      KsFwdDJXafd4PMGEcCiqSixE/+yVZMIaPRH2WZ6bTEl2Im8cOH2eVRogLy2O+zfM4aXdp9h+
      zEBUUXj8lkqS7WfP7JIo8smb5rOnuoPqlgFSEyx8+e6lpMRbxu0N3Yy4fMwvTGVBYRqBUAR/
      KILNrMdsiKldIy4/v3ztOF+8awl5aXa6h1z84vXjZCbZyE758MEho+4A//3acb50XvtWslMu
      UI7oQ/CxFIAEq5GNi/L5454G+kY9DIx52VXVwfyiVOrahvjPl49gNuiItxpiQSvBCFpJJD3B
      ins8VjgclclKttIxYKYtECa2DMRmp6isIIkCVqOepDgT7x5rO68PgiCgEUXsVkOsYAdgM+vx
      TJwWwXgVTQGtJLC4NH385EkkegGXbV8gQnu/A51Wg8MbZE5eMouK0y6oNhj1GjYvK2Lzsvcj
      tYadfn72ylFsZj1pCRZe3tPInuouRl1+gpEo8RYDD984j6LMBGpaB8lNs1NZlAbEVqXizESq
      WwauigDUtAySd277WYmcbBmYFYCrgSgK3LaiGF8gzDPbakiwGSnPTeZUxzAP3lBBSXYCw04/
      yXYT//HHI3T0O9FqJE53jWAx6vCFIsRbjbxxsJkxdwCtJGI26vAFIwiKgqyorJ6Xw6mOYbZf
      YPBDTO+PqspZhq04s55oVEEUBbyBMBajHllREASB/9l5KlbrQFUx6LWTG2aIrRIv7T5FOKLw
      N59cg6yo/P6dal4/2MR968qnpDvvrGon2W7iC3csRpJEirMT+MEz+/nCnYupLEqjumWAn75y
      lO98diNmow5vIIysKEiiiKwoeAJhzIZYZgpFVfH4wwSCQRIlzWVbnM1GLZ5z2/eHJ1egq8lH
      xhfoctFpJR68YS5fumsJ8RYD+2u78AcjvLb/NPtquynPTSI90co9a2IFtdMSzNy2sph/fGIj
      BenxODwB4i0GNJJIYpyJtAQzNyzMY8XcLAQBfIEwiTYjKowfs8YGwUSJJVGIqT+5qfZJa/LA
      qBeDXhM7t9dpMBo0hCIy3kCYSFRGJVb8r2vQxbDTR+eAk5f3NvLagWZOtgxw99pS0hOtZCXb
      uH/DXHae6JiynaJvxENumn1SvTrVEduop9jNJMWZWDM/B5tJT0PnMJVFaSiqytPbaqhqHuC5
      7XV4A2GWlGUQlRW2Hmrmu0/t4fvPHODXb1ZNZuebKguK0lDPbP+98fZLMy6rnanwsRUAiGWZ
      Xrcgl5KcRFZVZPOdJzbyZ/cupa5tkG1HWwGoLE6lMCOe8txkVszNpqq5n94RN3qdZjKF4sCY
      l9Y+Bzuq2jlY14NBq2HUHTirXFMoIseMbeOp9CZ8kLqHXTy8qQKLUYtRr8HhDiAIMUc8pzdI
      YpwRjSSSYDOytDSDL961hIExLz979Rj/9oeDDI75aO93MuIKTDrvqWqsDvHlZKGbk5dMdcsA
      bl+IcEQmEpGxmHRkJMVOm2RFjVm+x1eobz20mnBU4bnttXgDYb7+wEosRj37ars4UNfDE7ct
      5C/vX4YkCjy9reaykhXotRq+9fAZ7fvDfP2BFVhNV9+m8JGIB/gwODwBvvPkHr7x4MrJDMv1
      HcP84rXj/PtXbwFgxOHh5X1NNHSO4B+vyDK/MJXa1sHxnELD5wXI2C0GijITqGsfOsurdAKt
      JBKRFebmJbOhMo8dVe00do2M5x0SiLMY8PrDqKhkp8Txnc9uQK/V4PaH+O5Te+kf8/DXj6xh
      QWEKY24ff/2LnaTYzTx4w1yissLT22q4d105a+fnTEkFmijA0drrwG4xxIRXVVk5NxuDXsOQ
      w8eukx0kx5nITo3j8c0LyLxARuq//80uNi8rZFVFNqFQCJc/yo+eP8Bf3L/8gtdfLy47MdZH
      FWHi7F9+vyh2NCqflXLEZtbzudsXIQgCf/frndy6ooidJzq4dUUxWo1EY/doLIhGVijPTSbe
      akBVVR68oYJv/fzdCz43IitYjTpOdQ7TOeiaLPUKMctvst2E2xckKqsMjHl5eW8j9e3DDDt9
      uH0h4q0GclJjG0KDTkteahx6nYYfPLufUDiKxajD7QuhqEwpf6tRr+WLdyympXeMMU+ArOQ4
      nt1ey66THciqissbZHl5Fo/fuoDqlgG+9/Q+fvSVm84rGqiRYnESE/PqhAv3nzIs83L42AuA
      zaRnWXkGT75dzcObKghFZJ56p5o7VpeiqrFAk8P1vSAILC7NmLTaCoLA0cY+6tuHEAVIijPi
      8ob4zJZKTnUMs+tkBw2dw1iNegozEmjoHD4rysxmjlWjtBh1BEJRlpVncqi+Z3ID2dbnmLze
      H4zw0u6Gs/rt8oVo6RljUUkqDZ3D9I54KM9NoiQrkcdumY+qwK/ePIEoCty6vGhKA1CSxMl0
      jbtOdhAIRfj5N25n6+FYZFks9YvK5qVFHGno40RT/3nu2ZuXF/H89rqYSqcTeetwG8VZCaRO
      0+o1H3sBEEWBe9eV89ahZn7y0mG0ksSda0pZvyCPUbeff/jtLhKsBrQaied31LOhMpeX9jRQ
      npvE1kMtZKfYiMrKpHv1M+/W0tIzRmaylZ1VHbh8Qe5ZV4bTG+ShTXN5bf9p4swGHtpUwTf+
      a9t43IHI8aY+FFUdz1ytnheLoNWI6DQSCTYjvcNuIlGFn7x0iGR7rBBgbmoc+2q6+ftPr6cw
      IxY2+cRtC/mPl45w85JCNJrLm4Fbe8coz02edJAzG7RkJlnpGnSSOb4vuFDlzKwkGxlJVv7z
      5aMYtBLrK/O4a03ZBW0X04GPvQBAbDN85+pS7lhVCkwcL6r8butJblxcwC1L89HptOys6uBA
      XQ+3rSjmtf2n0WokwlGFOLMeq1lP36iH2rZBSrOTGHX7eXjTPE53j/CbN6vQaSVe2XsaVVX5
      0p1LONTQA4BGlLCaYoNbGQ9kvxBmgw6TXsv/umcpbxxoZl9tF7IScxfITLLyjQdX8o+/283u
      6k4qClJi34NYMt9zjWxToTAjgd3VHYQjMivnZrP1cKwm803aQrYebmbI4WPROSlP3j3Wyku7
      G8hNtWMx6ijPSaQgI57vP70XhzfIyvHcRybDpRP5qiqMuf08+U41zd2jFGQm8Mmb5pOWYLnq
      eUZnBWCcc8ubKopKU/coD2ycG4vaEgQq8mMuEotLMyjLSeJHzx/gz+5dRnZqHO8caeFUxzDp
      CRa+/uBKRlw+fvHacW5cUkh2qo31lXm8dbCZ3DQ7v3qziqONvYiCwLDTd4YbxcV/Xac3iD8Y
      obXXgTcYnnQJyE62cfeaEt452sqa+TnsrOqgo9+Joqr87u2T3Ly08LwUiqoKJ1v6eXXfaTz+
      EKvn5bBlRfFZp0bL52RS2zbE3/5qB9kpcSiqis0Uq6ecl2bnbx9bd9b1/aMeXt13mr99bB3p
      iRaC4SjffWoP1a2DPHrTfJLtZrYdbeE3b1XxpbuWXDKtYzAc4Z+e2sOa+TncubqUuvYh/uW5
      ffz9pzdgv8pOlLMCcBEEAXLT7DR0DpNqj3lJtvSOkWgzYdBqiDPruWV5USwEMSeJmtZBCtJj
      GbMHxrzkpdkxGXTsre5kTm4Kd60upSQrkX/7w0FG3X4yE230jLjZvLyI/bXdBMORs4LsQ5Hz
      T47CUZnfvFUVK+BXlklJdmLsmDAYRlFU5hWkIssK//rCQSRJYP2C3Avq/zVtAzy9rZY7V5cS
      bzWw9XALz26v5fFbFkxmjzDotHzhzkXUtg3RO+zh5mWF5KXGMejw8fLeRn743H6KsxN5cONc
      4q1GOgdcpCVYSLGbkcRYaheDTkN5bvLkSVRSnJF/feEgPcNu8tIuXlTixHidhnvXlnO4oZdj
      jX30jsQE7NGb5l1UeFQV2vrHeHlPI4MOLwuL07lzdeklCxPOCsAl+NTN8/nh8wdo6BhGq9XQ
      2DXCl+9agl4nIQgCNy4pID89nrr2IXzBCDqNxIKiVH75+nEK0uPpGHDy/9o77/g4yyvff9/p
      fTSjUe9dlqziJtu44gqYGAOhhM4me7ObZcknu9lN7s3dDdlN9mY3n7ubwiUhgWUDIRDAS8fY
      GHBvcpOtZvXeNaPR9Pa+94+RhmZjE2RLxPP9czSj93nLeZ/zPOec30lLNHDTyhKcngC/ffs0
      a6tz2X2igwSjBrvLx4EzPZ+IlH784ZcJ0VwhSYruxxu0KhRygdJsGxqVgvZ+R0wWflqpbum8
      TNYuyI090JIE+8508er+cwzZ3RRlWTnc0IvbFyQ/3UJ9xwjDdk9s33+6RqKqIJVJT4Bnd51B
      LpfhdPvJTDZRWZDC+KSXf/39Qb7/4BpSEw2MTnhxeQMkmnWEprJZc9MsMQNUTJWfflxg4OME
      QxFUSjlHGvt4aW8jX15ThuyYwJ5TndjMWq5fVhQLKH6YnhEnv3r1BKurstmwKJ+D9T08/tpx
      vvnlZRc0mrgBXABBEMhKNvMP96/mQF0XIGPbqhLSE42xGyqXySjOSqQ4KxH7pI/HXqnlUH0v
      NrOOY839rFuYx82rSkkwaNl9vB2rScft15bT1m8nPdHI2Y6RWB1COBJdS0RTDD7qs8vlAqHw
      R6VcTrYMcrZjhESzDvCiUSmwu3ysrspFnNJJGnV6+P4Da1ArFbx7soOn3jpFeV4yo04vp1uH
      SUrQcf3Swmjz7ckPpNinEUWJt4+1cqxpgOuXFlLXNsSplkH8wTApVgNjEx4cbj+nWoZYXp7J
      8vJM/u25g5TlJtMzJU/Z1D1Gc88YCQYN75/qwmTQXDQeUF2UygvvN/K7XWe4dU0ZcrkM+6SP
      P7thAa8damF1Vc55g2J7T3cxPy+JLcuLkQkCuWkJ/OuzB2jvt1+wGUncAD4FQYimAty4vAil
      UvmpPrrFqOWhW2o42tjPmNPD1hUllOUmxd483kAoVodw5/r5/GL7MZSKqA7oNE5PAKVCRmqi
      gQmXH28gWiGmVimwmlQMT/UUCIUjZKeYaet3xBa6ghCdKZaVZ5CUoOfEuQEaOkfZvreJrqEJ
      znZE64ibukZx+UIoph6q/Wd6yEuzAMIn3qqT3gD7z/Tw5zcupCgzkYFxF4qpvKfv3LWCsQkv
      3/7lLsYno43Jb10zj6JMK03dY6yoyKI8x8rJtlH+a8dpgqEIWSlmHryu+qIR6gSDhm/etpR/
      /u1eXtrTgM0czVGyGLWxzp7nw+sPkZSgi52HUiFHqfh0icu4AcwQghC9yKVQjgAAHsNJREFU
      cZtrCs779wXFabx7opMzHcNkJZlZVJLGqwc+2TdYFCW+sr6Cl/Y00jU0AUTzitzeIAq5AAhT
      DbJdU1VkEtUFKRw/N4hCLiPJrKd7aAKrSYvHH2LHkVYAJFFCkAkY9WpAwKBVMexw0z86iW8q
      cPZxeYBIRCQUFmM+9HT6ttsbwBcIMTLhIRIRY5uhSoWcRSXpLJrK2QkEAmxeUsCysgxCYRGz
      QY1aefFHThAESrIS2bqihLq2Ye67rgqTXs3L+5spz02+oE9fU5bBC+81MD8vGZtZx4mWQUIR
      kfxP6WZ0VRuALxCKlUCmJxov6151ps3E3Rsref7dBkLhCP5A1M836lQ8fOtSfv36CUYnvEiS
      xM7atmhsYVqbaCo9AgQ0Kjl/uW0x7f0OXt7fjDcQ4lTbEMFw1G/ec7qLI419sbdsZUEKwbBI
      skXPO7XtBIIR0m0GOgYmSLUaSLeZ6Biw4w2HeG53PcumXBm1UoFRr6Yww8LOY+3ceE0xWrUi
      2m0HgR89sx+ZIKBRK2MuzYQ72rbWrNdgm6pDkMkELB9S3btUBEHgppWluLxBfvP6SSQgJ8XM
      nRvnX9Cfr8xPYXTCy1M7ThOJiJgMGr62ZUF8EXw+BsZc/HZnHU63H0mCoiwrd2+ojEkqzjSC
      IFCanUhJVjRvviw3iYFxF3lpFoqzEqkuSmV3bQeiBGfbRzBoVaiVCpQKiRSLHl8gTDAURqtW
      kp5oZMThJRiKoJALlOcmYTVp2X28k7eOtqGUy9CoFFgMGkpzkthzqou7N1ZwqL6XMaeX8cmo
      VurIhIdhhycaLa4pJM0WbfM0OO7m9mvLUCnk3LFuPk/vrOPfnjuIJEYfQp1GRU6Kmf4xF1UF
      KczPS6aubYg/vN+AJEpEJIn1i/JZVf75sjc1KgUPXl/NsMODJEkkW/SfmlqtkMvYuDifxcVp
      eAMhrCbtRVOor8pkOH8wzKMvHyMn2cz6xfkEgmGe2XWG4qxEtq38ZGlgMBi86BrgYnj8QX6x
      /RhqlYLSrETOdo5wtLEfuSy62PYFQoxPRjM69RolyRY9AgKFmVba++0M2d34g2GUCjnpiYbo
      d0NhrEYtd2+Yz+uHW+kbmUQCtq0sYeOSAt441MKEy4/d5cPh9tE77EIUP3B0lAoZJp2aUETk
      4VtrWFKaQd/oJD/ffpSHb10aSw4MhMIM2T3IZVHXaV9dN+39dgozE1m3IJdgOMIjT+3lno0V
      FGcnMurw8vhrx7lrQzkLiudOE48Pc1Unw9knfQyNu7lvc1VMFHf9wnxe3NNwXgP4PEREkZbe
      cd460kZrn53v3beKvFQL6xfl893Hd+P0BOgdcaJRKwiGwlTmJ3PXxgqyU8w8/uoJspJNbFtV
      Sv/oJK8caKZzYIL+MRcJRi2BUISCdAvNPWNsvaaEZ3efxeMPsuNIG95AmCWl6eyqbY8eYzja
      18wXCJOUoKMoM5Ha5n7CEZEUi56TLYMsKc3ApFPH5GKmUSsV5KR8UIm1dUXJR87xbGMfiWYt
      VUWpqBRyzHoNFfkpnO0YnbMGMM1VaQAqpRy5TIbbGyQ5QY8kSdhd3ph620wx3dF++94mNKqo
      jOKj24/xV7fUkJ+WQIrVwOqqHCKiyLGmfsx6DV+9cSFalYJIRCI1MVqnm2EzkmEzUpabRHu/
      nRMtg4w4PGhUCnqGnZzrGaN7eBKXN4BcJkMC3j3RwYlzA/zFTYvRqpX855unGJ/0UlWQSnPP
      GG1944SnZBpDYZF5OTbcviCn24YQBIH0xGg8YHo/Xz7ly09HoKWpUlGXL4hAtCQzFI7EJGUc
      bj/ZycYLX5w5wlXpAomixCsHmqlrH2b9wjzcviDvnezkgeuqY3k0Hx/bH+MCubwBfvzsQW5b
      W4ZWreCxV46zoCiVgTEXd22s4Af/tZf/fe9q8tMTGHf6+Men3ses1zDpCaDXKHH7gzxwXfUF
      e4GFwiIHz/bw5JsnSUqIZlvetLKEt460MjDupqY0nTGnj3+8fzX1XaP8+Hf7KcxMpLFrFKVC
      TnaKib6RSfzBMNkpZoxaNWFR5N5NlZTlJuFw+Xj+vQba+saRyWQsLk3n5pWlKBUymnvGeW73
      WVzeABq1knGnl8qCFBaVpNM+YKepa4xv3LQAm8WIyxtEpZBj1KnmTFr0ZXeBJEki6HMjKvRo
      VdFVe8Drwu0LoTeZ0cywDN9nQSYTuPGaYhIMGvac6kKnUfLA9dWU537y4f88+INhPP4g6TYj
      iSYtG5fk89qBczjcflr6xpHLZDy98zRf2VBBZpIJgWhukEmnZtITwB8KY9Rd+KWgVMhYVZnF
      hMvDkaZBhh0ejjUP0NpvR61UcLJlkHBExB+KUJmfwsYlBbx28Bw5KQkUZFg41TqE2aAhQRC4
      bW0ZJr2a7GQzCoWMMaeXF95vQC4T+Pad1+APRtPEd2s7WF6eyc+3H+W+zZUUZSbSMeDgN2+c
      RJQkdhxpJTPZxEO3LCEQCPL/Xq6lZ9iJVq1kc00Bqyqy51RmqPyRRx55ZKb/qSRJjHTUsevN
      Vxg3lJNnUyN6hnh71wGczlGau53kZKeh+JDGSyQSQS6/ckYhl8nIS7OwpjqXa+ZnRRedF3g5
      TY/ts769ZILA2Y4RBAGyU8zkpJrpG52kb9TF17cu4ivr55Ng0PDkmyfRqZXYXT7+9o7lFGRY
      2VxTSESUOFTfi8PtQ6NSYNafXxzKYtDw+3cbiIgiXUMT5KUm4AuEKMq0MjLhRSETmJebRFGm
      ldOtw1Md7yVEUWLrihL6xybZsryYvFQLp9uGefLNk+w40kbHoIO71leQn27FYoyKU712oAWD
      ToXbG+ArGyrQaaLboB0DDgozrHx962IWlaSjVMh59OVaCjMTuXtjBQXpFrbvaSLZoictcfZd
      o0gkwg9/+MMfXB5TlCQi2mQ2XVMR+6i3oZGc5RtYc+0mMpQTjH7GQukvIlq1krvWV/DO8Q7+
      5dkD/MszBzhxbpDFJemsrsohKUHPiopsclMtnO0YIRQWsZi0LCxOQ6dRUt8xgtcfYmDMzX+8
      eIRD9b3nlWQ0GzTctrYspiHaOzqJIAi4fSH+9o7l7DvTQygUwahTc991lXh8QVzeaKH90zvr
      CEdEVAo5TT2jvLSnkVvXlPHNLy9FKZfz+931+Keae/iD4ZimUiAUidU1i5JEYCp/Z5rOQQeh
      sMTmmgJSrQYq8lNYWZnNgTO9V+z6XwqXSRlORnp6OpOTzbHPnAEZSaZoHniC1oBXDF82deiZ
      JhKJ/NFaoGlWLf/r7uU0dY2hVMgZdXo51TaM3++PtUENhEIsKEzhcEM/f3ivnpqSNN6u7WDS
      G+B7d19Dus1Ic88Yv9vdQGG6GYvxg5RgSZIQIyKbF+dSmmXh0VdOsLwsg5IsK/Pzk+keciIT
      ousYpAhl2VbWVmezs7aD5AQ9K+ZnMO708czOOmQyWFKSSnmOFVGUWFOVxRuH23j3eDtWk5YX
      9zaxbUUx5TlWXni/gZf2NFCRl0Rj9ziDY5NUXVcRu4eRcJhIJILX60cQIwgyAZ8/iEyQ5sR9
      vqzq0OdDIYXxTWUBBsIBlJJw2dShZ5rPGwdQq9WsqIpO+y5vgJ21new60U1VQQqn24YZcXhZ
      XZ3Pyspcnn+vnsdePcn4pJevbllIbroNQYDcdFt05yoQISUxqhfU1D1G34iTvlEnx88NUZyV
      yDXzs2nqHmVpeRa9ox6efqee65cWodNqYCpfqHvYxde3LmZ1VQ4AoxMefvL8IbQqJckWQ+w+
      VBels+NYB0+8eRq5XMbt15YhSgJnO8f5u6+s4MX3G3n/VDcF6Ra+e88qkiwfFKyU5CRj0qv5
      6fZaHC4/Jr0aXyDEX99Sc1HFaEmSYrOL7AI90T4vl1Ud+nzkFiTyzvFWMpdl0DrsZXX1ZxNj
      /VPBoFXzvftW89sdp3n9UAtFGVa+d99qDFoVggBf37oYgGd2naFz0DElfy6jd8SJJEGiSUcg
      FOaJN05y4EwPYVFEq1LynbtX0Nw9xsH6XtYtzOWXrxwH4MZripHLZXz7sV2EIiIbFudHm4JI
      EqFwhIbOUfqmSiyvX5rDK/vPkWEzodcq+dlLRynMsPDVLQvZeayN59+tp7owFQkYeb+BHzy4
      Fpv5wvdRFCUUMhkyQYit9y7UkmqaiCixq7adtw63ggBblhexaXHBZetzdlm2QcWIl4O73sE+
      FUsxpBaxdsk8BluOc7rdQeWylWRZdR9ZdP4pzwAf53yX/OP/2+nx8x8vHCEYimA2aOgcdPC1
      LQtZVJLGW0faeHpnHcVZ0cxLq1FLTVkG922q4kfP7OPGa4pjIlJ7TnfzxqEWHryhGrVSzu93
      n8UXCBMIRVAr5TimIsUqhZxv3bYMrVoR2/oszkrkb25fjmZKbaJ9wMHDt9awsDiN1w6d41zP
      OH935zWxsUsSHG3q4+V9zdgnfaiUMn7wZ9eSaIoGG185cI6BMRd/dfOSC16XN4+0cuBMDw9e
      Xw3Af+44xeqqXG64xML+S+WyboPK5DpWXX/TJz7PLF1C5swGWr+QXMqNNOk0fPfulVGxKm+A
      B66rItmix+0L8u7JDrauKGHTknx++PQ+Ek1aWnvHQWBqXfHBMd441MJ9myspz01CEAQeuK6a
      n710lASDhvZ+O3qtihuXF1GUmcj2fY18566VfOu2ZTz+2gkMWhU6jXJqIe7CGlO6E1hYlMYb
      h1qjhfxTx6pt7ueF9xv4yrr5THqD/Ob1E7xxqIV7N1cil8mQCZ/eVyEQivDu8Q6+cfMSijKj
      MuJfvWEhj71Sy4aFeag/g9DXpXJVRoK/CAhCNBlsaVnmRz6fcPsZcUR1/o069VTKwQjJFj27
      atuZ9ASo+FAwLxwRUSg+2MKVy6ORYvukl6/duJCaeRmoFHJcvgCvHTzHvrpu3jvZiUGroqFz
      BKfHz61rylAoZEiiRHlucqwFa15qQuz/DtndvLinkdVVOSwqSScUibCvros9p7vIsBkJixL7
      6nq4/7oqOgYcbN/bxJDdRVVhKjevKo0VuEyra0/zgdL2ZbrOV2Mk+LMy0y7Q52HC5eeHz+zD
      Fwhj1qsZc3oZdnhQK+WkWg38/V0rYklsAG8ebuFYUz/3X1eNUiHnpT0NKBVyuoedON1+5uUm
      sW1lCcFQhEdfrkUQ4I5ry1lcmk5j1xhPvXUKpydAfrqFYbubstwkIqJEW984f3/XSjKn5F9e
      3t+M0+2P6RDdsnoeZ9sG+ckLRxEglpK8bVUp75/sZHV1LjkpZg7V9zLh9vO3dyxHLpPx0t5G
      Wvvs3LupEoCnd9ZRkm3j1jXzzlsG6fWHePtYG7XN/ViNOrauLKY403ZR9YhpFyhuAJfAXDIA
      SZI4VN/H07vqcE3peOanW6IaQP99jH+8fw3JHxKhCoUjvHrwHIfr+xBFkfK8ZAbGXOi1KvpH
      JxlyuFErFRi0KhYVp9HYNcr/vGclFqMWSZI40tjHK/ub+ac/uxa7yxfLYF02PwubSceww80/
      /dde/v6uFZzrHeetw614/EHu2lBBXdsgTk+Qv7hpMTq1ksbuUR57uZa1C3J54PpqZILApCfA
      /3n2APdtqmRebhL+YJjt+5o43jwAwJLSdG5dPe+87k84IvLEGyfx+EOsqcph2OFmz+kuvr51
      MYUZ1k+9jld1NugXGWGq7FGrVvDz7UfZtrKENVXZWEx6UqwGOgYcHzEApULOLavmsXFRPqIk
      MTju5umddTz85aWIosTRxj4O1veSajVww7IimnvGGHZ4pgwAeoad5KQmoFYpSEs0su1jnWRa
      +8bJTDKRmWQiw2bE6w/x8r4mfvXqcUJhkS3Li7AataiUcspykrAYozn6H5QtylAqZPinyhY1
      KgV3ritny9JohyGjXhUr7P84fSOTdA1N8De3LyfZokeUoo0Gdx/vuKgBTBM3gC8gcpmMggwL
      6YlGSrITo+WPgRD2Sd8nOsJANPfJPKWn0z3sRKWUo1LI0WmUXL+sCI8/+ltbgo4Ni/N58s1T
      VBem4PQE6Bl28tAtNRccS4rFwMiEB/9UWWVxVjSItnFxAeNOD7tq26MSJ6vnYZ/0EQiFqW3u
      p6IgmeQEPadaBwkEIxRlfvDAyqcah1yMQCjaqna6+k0mCJh06lgXnkshbgBfUEy6qC7RMzvP
      UF2YStuAg4q8ZHLTLqy3A1CQbiEYinC4oZcFRWmMOb0cPzfAHevKkQkCa6tzSbEYOH5ugOQE
      PaurcthX103viJN5OUmsX5Qfa4QBUJBhYV6OjX//w2Hm5yez/0wPhZlW7lxfztiEi1GnjzcO
      t+Dxh2juGWNzTSFGnYqn346mYJgNGv78Sws/tWzxQmQmm1Ar5eyr62b5/Ewm3AEO1vdy3QXq
      ss9HfA1wCcylNcCHiUREGrtHOdrQR1GWjWVlGZe0VdjSO85z79bj8QURZALXVueyYXH+J2pt
      HS4fP99+jFSrgYJ0C6fbhlDIZTx0S81HvusPhjnc0Etz9xinWoe4d3MVKyuyCQYDdI24+L9/
      OExZThIrK7KpKkxBLpfFVC8sRs3n6vzSNTjBs7vP4nRHU0uWl2dyw/IiVBfpShNfBH8G5qoB
      AIiiSCQSQam8sN6mLxBi/5kemnvGyE42s6Y6F6VCxrjTi16jwmrWnneHZcfRNuo7R/ib25Yh
      n6oSe+SpPXx1ywLm5SSd91ivHzpHY9cY922uRBIj7K3rZcfRNjYszmfTkgJSLDOv7+n1hxh1
      etCqlNjMukuKGscXwVcJEVHkP986jdPtpyI/mfYBB02v1vJXN9eQ8ynyhBCNFSQn6GP5+2ql
      nASDBofLf8HfbFhUwKjDy09fPBItllEp2bqihLFJL4+9Uss3ti0h1WqY0XPUaZTkaD79XC7E
      3KlMiHNZaO2z095v55tfXsqXVpTw0C01SESjthejIj+Fhs4RekeceHxBWnrHGbK7Kc66cLNn
      rVrB/ddVcfOqeSgUcr51+zK+vLaMP79xIdnJZt470TmDZ/f5ic8Af+KMTniwmXWxtYFCLiM9
      0cjwVGvWT6MsN4mVldn89MWjUwX1Ie7dVPmpCXAQjTYbtCrMek1ME0guk5GRZKK5e/Tzn9QM
      EjeAP3GKsxJ57t16uocnyLCZcLr9NHSNcs/Gyov+ViGXxRLrxqaK8xMv8vBPk5FkJBgK09wz
      RnluEl5/iJMtAyydl3nxH19B4ovgS+CLvgjee7qL/97XhNWkw+HysbIym5tWlMbas14ujjb0
      8MKeZoy6aF/h0mwb92yq/EzdKy8X8V2gz8AX3QAAhh1ueoadpFgMZCabzrvrM9MEAgE8QZHO
      gWjnydy0hAtGda80cQP4DPwpGMBsEAgELlr9NVtMG8DcMMc4cWaJK+qMfXiymYtv0zhXH1fO
      AIIO3nptJ0GZDLVtHhtXVqCMzz9xZpkr9gj2nT1N2rIb2HbzbSRJQ1eFLlCcuc8VMwCHF1Kt
      UWUzm86AOxK6UoeOE+eCXDEDkIkioaneTqFIGJkUXwPEmX2umAFkZZtoqu8hFJikc9yNVTuz
      DY/jxPljuGIGYMqpJlc5yI5dB8iurCFBO/f2reNcfcQDYZdAPBD2xxEPhMWJM8eZ1aykD6tD
      i6IYVTCeg4iiSCg0d3etRFH8o9WrLyeSJM3Zezp9vWbVAL4o6tChUAiFQjFnXSBRFFEoZj/D
      8uPM5Xs6bZhxFyjOVc2cMYC5+Aab5kq2bvqsCEK0z8JcZC7f0+mxzZldoDhxrjSCIMR3geJc
      3cw5AxAjIZwOO5NuH7M5N0limEmXJ7ZbIE2Ny+n2XrTLyWUeGaGAF4fdjtPlQZRAFCM47HZc
      3tntvRX0e3DYx7FPTBKeTnvxe7DbHfgC4VkZkxgOMOF0IxLd+fG5ndjtE4Qic2AX6BNIEc4d
      30enE6SAl9Kl11KQPLMaMpdCJDDJkX37ONEf4KH7b0FAou3EHlqcCiSPk+LlGyhKMTAbe0Ih
      zwSHDx1GVBnwTk6Qv2gtmaoxjp3pwe90s2zzDaToZuO9JtF04hCOsJqwbwJF8nxWlVnY9+5+
      0OrwBtWsWbcCk+rKjU2SInSceo83T/j42l/cjNzRxdt7zmI1K/Bq8oA5ZgCiZ5Qej4mNG5cQ
      HOviSFsnBckVF//hDBP2+ihatoHxPe9MfeKlY1TOxuvWovB1s6u2k/yUilm5eDKNiWuu3YRC
      Lme09wwtw6MoXG1sXrcZ99AZjjX0krIkZxZGJlC1YmO095i7h/cOjzHYbcdYtJia4nTa6w7S
      OzhBec6lqTZ/fiTco510eS3My1QAEp1nmqnYsIUCo8CeN3cAc8wFCvl9aBLMKAXQavVI4uxM
      m2pLCkn6D+9fu1AobcjlAjKDFW3IQ2RWRhbdkZLLZYz1NFLbaKesNB2HP5pYqDQlIQtcujLy
      TBN09LPj9e28vKuB+UvmEQyJWAxRGRWj3kwofGFFuZlGDHo409DLwkXzp2bqCJNBDTZTtFtO
      0lR8Yk7NADK5nIDfjSRBOBKeZV/7wygIh31IkoQkBgiKsllxfwAkSaT7zGFaXXrWbVyLRh5C
      KUaDOlLER0ScvVuqsmRw/Y03M9hxitMnGymySfgj0ZdYKByAyyzD8mEGmo5S197P2MQ4ne29
      +C020sUg/oiEJJPwTUX259QMoDTZUDl66J3w0tN+DqMl+eI/uiIkool0MzARoLeuDmVWFrOV
      euYf76XNrWf9ymo0cgFQkltixOEL0Hr8LIkFs+H+AHhoO9dDUBSwJNoIupzYUhPpamrF43PR
      2jmIzXal3B/IrFrPN752Hzd96QbKS+ezbkU1ufl6TtZ2EfaO0BaI3sE5FgeQ8E+OcvRILXJb
      EUsXFKG84ukHEsOtpznS2IMkSQiCwII1N5KumuDggSNgLWD5ghJU8tmZA9z2bg7sP810m+ei
      RcsoSNSy9733sBRUs7gkc8bVly8Nke7Gk9S3DyBoLCxZvhSbXslodz3HG/ooqF5Kcbr1yo9N
      DNLW0k12aRFKMUxb3WGah4IsW72GZINy7ugCxYlzpYkHwuJc9cQNIM5VTdwA4lzVxA0gzlVN
      3ADiXNXEDSDOVU3cAOJc1cQNYEbw88qvf8JP/uPnPParJ9h3uoPIjEdXArz+1K841n6+HlsR
      al/7Dd/5wePYI4AkUrfjWR5++BF6I+JMD+RPijmVC/TFRaR/xMX6u75KkdHOb375O/SmvyRV
      4ceWmYVC9NM/aMeql+EMyvBOjKE0p5KbZmV8sIthuweV0UZeZjLu8X4mAzK8LicmWwph1xgB
      uYGcrBRyiovRGdSI4SADvV24QnKyc3LRqyUmxoZQBEROdbhYl6/hcOMwkcEGfEAk4KKjsxdJ
      bSYvOw0p4KKnd4CgKCc9JxezRmCotweHN0xSehZmVZCRCZHMNDNjg4OoEpIJ2AdRJ9gYHRon
      Jy+doc52JoMysgvyMajmbsnoxYgbwIwiYEwqYGWxkSNnG1HUv0PVPd+lKHSCJ14dYmtOH3/o
      TmHroiRe/PWL/Ou/f5/G07WENTaOPvs0Gx/6PhNv/5LDwRpqrMO80+hly4b5vP/2Qe5+6Nuc
      O74Ho7EQ39mD7GoTqSxKRWNKIi9VhyAomL+wkMZT9azJSCeoy8YoHAZEdj73BC5bBeHeN2he
      dAeLLGO0dTrwjTSzs7aYO1eYeGp7LUsXFtE1HqQqsZtfvxnkn769mR3P/JLMLQ/Rvv3fCGQu
      Z9wO25Zp2NMmY57ZydvHu/nm3euRX0Jz6rlI3AWacQQUCgWS0syqmkIOHzlFy6mzVK9agUyQ
      k1taxTUr1qLxDuOTQqgEOHeumYmJHroGo1md+RU1bFpdg8FgY9HKDRSkyPEHpnSJwhPsOdzA
      +i/dxsb168lLNcWObMxZQHCgnrGm49jm10x9OsKOnacY7mphbMJNV1cfarWK4f4OBofH6Grt
      IqxUIwYmmQzpqJqXx/m8NzEiYi5cyT9863aO7dzJmH2YtqEJ+rs6+CJ7WfEZYIYJeUc53jZO
      1S2Z5CUa8f/sWQ6aLdxzUyYDvR/7sreVZ3f28KMf/zWHf9fPxTv3AjIlJq2CSbeHSESGJAlM
      iy8oNGayZBNsPxph8/2ZnAFAidpo46a7HyTLpMAfFHnr8R+RtO5/cLupnx8/34gutZSHvpFO
      89F3+eXjrdx7SxqSKBIJhwmGwlOHVZGfl4sghNBpNSxcfzs3VVrx+Xwov7geUNwAZgYBvSLE
      Wy/9lgMqGZlLtrKsyIYSE1UpAQ7r5pGqglGtHr06qjFqNpuRadIpMI3zu2eeIzIaIF8lQ60z
      oVXJQabEaNAhADq9EYVchlZvQq1O4PovbeaZ156g3prGxhu2UpSmQ60zoFCpKVuQxo/2C/yl
      DkwWKwoSuf/2Kp589FHSUyyULllP4bxCXt2xHVeqFoXaiGvoHO+9cQhvwEdWQTXJtmwMnmd4
      6nkv4wE585Ry9EYzKjkgU7D5znv5xZM/ZeBwJpacSm7fvIxZSo793MSzQS8bEn7XOK8+/STp
      m77OqqKE2R5QnI8hCEI8HfryEaH1+AH6hQzWLCqctQqyOBdGEATh/wOTh6KJKeNE3QAAAABJ
      RU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Scatter Plot' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
